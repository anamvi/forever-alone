Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> PROGRAM ID SEMICOLON variables np_push_global_vars_ prog_funcs func_princ
Rule 2     np_push_global_vars_ -> <empty>
Rule 3     prog_funcs -> funcion prog_funcs
Rule 4     prog_funcs -> empty
Rule 5     variables -> VAR variables_2
Rule 6     variables -> empty
Rule 7     variables_2 -> tipo COLON lista_id SEMICOLON variables_rep
Rule 8     variables_rep -> variables_2
Rule 9     variables_rep -> empty
Rule 10    lista_id -> ID dimension_var lista_id_rep
Rule 11    lista_id_rep -> COMMA lista_id
Rule 12    lista_id_rep -> empty
Rule 13    dimension_var -> SQUAREL CTE_INT SQUARER
Rule 14    dimension_var -> empty
Rule 15    tipo -> INT
Rule 16    tipo -> FLOAT
Rule 17    tipo -> CHAR
Rule 18    func_princ -> PRINCIPAL PARENTHESESL PARENTHESESR CURLYL estatuto_rep CURLYR
Rule 19    funcion -> FUNC tipo_func ID np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON variables np_add_vars_to_table_ CURLYL estatuto_rep CURLYR
Rule 20    np_set_scope_ -> <empty>
Rule 21    np_add_func_to_directory_ -> <empty>
Rule 22    np_add_vars_to_table_ -> <empty>
Rule 23    tipo_func -> tipo
Rule 24    tipo_func -> VOID
Rule 25    funcion_param -> tipo ID funcion_param_rep
Rule 26    funcion_param -> empty
Rule 27    funcion_param_rep -> COMMA funcion_param
Rule 28    funcion_param_rep -> empty
Rule 29    estatuto_rep -> estatuto estatuto_rep
Rule 30    estatuto_rep -> empty
Rule 31    estatuto -> asignacion SEMICOLON
Rule 32    estatuto -> llamada SEMICOLON
Rule 33    estatuto -> retorno SEMICOLON
Rule 34    estatuto -> lectura SEMICOLON
Rule 35    estatuto -> escritura SEMICOLON
Rule 36    estatuto -> decision
Rule 37    estatuto -> rep_c
Rule 38    estatuto -> rep_nc
Rule 39    np_assign_quad_ -> <empty>
Rule 40    np_push_var_ -> <empty>
Rule 41    np_push_operator_ -> <empty>
Rule 42    asignacion -> ID np_push_var_ dimension ASSIGN np_push_operator_ expresion np_assign_quad_
Rule 43    dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER
Rule 44    dimension -> empty
Rule 45    np_pop_dimension_ -> <empty>
Rule 46    llamada -> ID PARENTHESESL expresion_rep PARENTHESESR
Rule 47    lectura -> READ PARENTHESESL lista_lectura PARENTHESESR
Rule 48    lista_lectura -> ID dimension COMMA lista_lectura
Rule 49    lista_lectura -> ID dimension
Rule 50    escritura -> PRINT PARENTHESESL lista_escritura PARENTHESESR
Rule 51    lista_escritura -> letrero lista_escritura_rep
Rule 52    lista_escritura -> expresion lista_escritura_rep
Rule 53    lista_escritura_rep -> COMMA lista_escritura
Rule 54    lista_escritura_rep -> empty
Rule 55    decision -> IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt
Rule 56    decision_alt -> ELSE CURLYL estatuto_rep CURLYR
Rule 57    decision_alt -> empty
Rule 58    rep_c -> WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR
Rule 59    rep_nc -> FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR
Rule 60    expresion_rep -> expresion_rep_2
Rule 61    expresion_rep -> empty
Rule 62    expresion_rep_2 -> expresion COMMA expresion_rep_2
Rule 63    expresion_rep_2 -> expresion
Rule 64    retorno -> RETURN PARENTHESESL expresion PARENTHESESR
Rule 65    expresion -> exp_comp expresion_2
Rule 66    expresion_2 -> AND expresion
Rule 67    expresion_2 -> OR expresion
Rule 68    expresion_2 -> empty
Rule 69    exp_comp -> exp_ar exp_comp_2
Rule 70    exp_comp_2 -> comp_sym exp_ar
Rule 71    exp_comp_2 -> empty
Rule 72    comp_sym -> LESSTHAN
Rule 73    comp_sym -> GREATERTHAN
Rule 74    comp_sym -> LESSEQUAL
Rule 75    comp_sym -> GREATEREQUAL
Rule 76    comp_sym -> EQUAL
Rule 77    comp_sym -> NOTEQUAL
Rule 78    exp_ar -> termino np_operation_quad_ exp_ar_2
Rule 79    exp_ar_2 -> PLUS np_push_operator_ exp_ar
Rule 80    exp_ar_2 -> MINUS np_push_operator_ exp_ar
Rule 81    exp_ar_2 -> empty
Rule 82    np_operation_quad_ -> <empty>
Rule 83    termino -> factor np_check_op_stack_factor_ termino_2
Rule 84    termino_2 -> MULT np_push_operator_ termino
Rule 85    termino_2 -> DIVIDE np_push_operator_ termino
Rule 86    termino_2 -> empty
Rule 87    np_check_op_stack_factor_ -> <empty>
Rule 88    factor -> const
Rule 89    factor -> ID np_push_var_ dimension
Rule 90    factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
Rule 91    factor -> llamada
Rule 92    np_add_false_bottom_ -> <empty>
Rule 93    np_remove_false_bottom_ -> <empty>
Rule 94    const -> CTE_INT np_push_const_int_
Rule 95    const -> CTE_CHAR np_push_const_char_
Rule 96    const -> CTE_FLOAT np_push_const_float_
Rule 97    np_push_const_int_ -> <empty>
Rule 98    np_push_const_char_ -> <empty>
Rule 99    np_push_const_float_ -> <empty>
Rule 100   letrero -> CTE_STR
Rule 101   empty -> <empty>

Terminals, with rules where they appear

AND                  : 66
ASSIGN               : 42
CHAR                 : 17
COLON                : 7
COMMA                : 11 27 48 53 62
CTE_CHAR             : 95
CTE_FLOAT            : 96
CTE_INT              : 13 94
CTE_STR              : 100
CURLYL               : 18 19 55 56 58 59
CURLYR               : 18 19 55 56 58 59
DIVIDE               : 85
DO                   : 58 59
ELSE                 : 56
EQUAL                : 76
FLOAT                : 16
FROM                 : 59
FUNC                 : 19
GREATEREQUAL         : 75
GREATERTHAN          : 73
ID                   : 1 10 19 25 42 46 48 49 89
IF                   : 55
INT                  : 15
LESSEQUAL            : 74
LESSTHAN             : 72
MINUS                : 80
MULT                 : 84
NOTEQUAL             : 77
OR                   : 67
PARENTHESESL         : 18 19 46 47 50 55 58 64 90
PARENTHESESR         : 18 19 46 47 50 55 58 64 90
PLUS                 : 79
PRINCIPAL            : 18
PRINT                : 50
PROGRAM              : 1
READ                 : 47
RETURN               : 64
SEMICOLON            : 1 7 19 31 32 33 34 35
SQUAREL              : 13 43
SQUARER              : 13 43
THEN                 : 55
UNTIL                : 59
VAR                  : 5
VOID                 : 24
WHILE                : 58
error                : 

Nonterminals, with rules where they appear

asignacion           : 31 59
comp_sym             : 70
const                : 88
decision             : 36
decision_alt         : 55
dimension            : 42 48 49 89
dimension_var        : 10
empty                : 4 6 9 12 14 26 28 30 44 54 57 61 68 71 81 86
escritura            : 35
estatuto             : 29
estatuto_rep         : 18 19 29 55 56 58 59
exp_ar               : 69 70 79 80
exp_ar_2             : 78
exp_comp             : 65
exp_comp_2           : 69
expresion            : 42 43 52 55 58 59 62 63 64 66 67 90
expresion_2          : 65
expresion_rep        : 46
expresion_rep_2      : 60 62
factor               : 83
func_princ           : 1
funcion              : 3
funcion_param        : 19 27
funcion_param_rep    : 25
lectura              : 34
letrero              : 51
lista_escritura      : 50 53
lista_escritura_rep  : 51 52
lista_id             : 7 11
lista_id_rep         : 10
lista_lectura        : 47 48
llamada              : 32 91
np_add_false_bottom_ : 43 90
np_add_func_to_directory_ : 19
np_add_vars_to_table_ : 19
np_assign_quad_      : 42
np_check_op_stack_factor_ : 83
np_operation_quad_   : 78
np_pop_dimension_    : 43
np_push_const_char_  : 95
np_push_const_float_ : 96
np_push_const_int_   : 94
np_push_global_vars_ : 1
np_push_operator_    : 42 79 80 84 85
np_push_var_         : 42 89
np_remove_false_bottom_ : 43 90
np_set_scope_        : 19
prog                 : 0
prog_funcs           : 1 3
rep_c                : 37
rep_nc               : 38
retorno              : 33
termino              : 78 84 85
termino_2            : 83
tipo                 : 7 23 25
tipo_func            : 19
variables            : 1 19
variables_2          : 5 8
variables_rep        : 7

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . PROGRAM ID SEMICOLON variables np_push_global_vars_ prog_funcs func_princ

    PROGRAM         shift and go to state 2

    prog                           shift and go to state 1

state 1

    (0) S' -> prog .



state 2

    (1) prog -> PROGRAM . ID SEMICOLON variables np_push_global_vars_ prog_funcs func_princ

    ID              shift and go to state 3


state 3

    (1) prog -> PROGRAM ID . SEMICOLON variables np_push_global_vars_ prog_funcs func_princ

    SEMICOLON       shift and go to state 4


state 4

    (1) prog -> PROGRAM ID SEMICOLON . variables np_push_global_vars_ prog_funcs func_princ
    (5) variables -> . VAR variables_2
    (6) variables -> . empty
    (101) empty -> .

    VAR             shift and go to state 6
    FUNC            reduce using rule 101 (empty -> .)
    PRINCIPAL       reduce using rule 101 (empty -> .)

    variables                      shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) prog -> PROGRAM ID SEMICOLON variables . np_push_global_vars_ prog_funcs func_princ
    (2) np_push_global_vars_ -> .

    FUNC            reduce using rule 2 (np_push_global_vars_ -> .)
    PRINCIPAL       reduce using rule 2 (np_push_global_vars_ -> .)

    np_push_global_vars_           shift and go to state 8

state 6

    (5) variables -> VAR . variables_2
    (7) variables_2 -> . tipo COLON lista_id SEMICOLON variables_rep
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . CHAR

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13

    variables_2                    shift and go to state 9
    tipo                           shift and go to state 10

state 7

    (6) variables -> empty .

    FUNC            reduce using rule 6 (variables -> empty .)
    PRINCIPAL       reduce using rule 6 (variables -> empty .)
    CURLYL          reduce using rule 6 (variables -> empty .)


state 8

    (1) prog -> PROGRAM ID SEMICOLON variables np_push_global_vars_ . prog_funcs func_princ
    (3) prog_funcs -> . funcion prog_funcs
    (4) prog_funcs -> . empty
    (19) funcion -> . FUNC tipo_func ID np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON variables np_add_vars_to_table_ CURLYL estatuto_rep CURLYR
    (101) empty -> .

    FUNC            shift and go to state 17
    PRINCIPAL       reduce using rule 101 (empty -> .)

    prog_funcs                     shift and go to state 14
    funcion                        shift and go to state 15
    empty                          shift and go to state 16

state 9

    (5) variables -> VAR variables_2 .

    FUNC            reduce using rule 5 (variables -> VAR variables_2 .)
    PRINCIPAL       reduce using rule 5 (variables -> VAR variables_2 .)
    CURLYL          reduce using rule 5 (variables -> VAR variables_2 .)


state 10

    (7) variables_2 -> tipo . COLON lista_id SEMICOLON variables_rep

    COLON           shift and go to state 18


state 11

    (15) tipo -> INT .

    COLON           reduce using rule 15 (tipo -> INT .)
    ID              reduce using rule 15 (tipo -> INT .)


state 12

    (16) tipo -> FLOAT .

    COLON           reduce using rule 16 (tipo -> FLOAT .)
    ID              reduce using rule 16 (tipo -> FLOAT .)


state 13

    (17) tipo -> CHAR .

    COLON           reduce using rule 17 (tipo -> CHAR .)
    ID              reduce using rule 17 (tipo -> CHAR .)


state 14

    (1) prog -> PROGRAM ID SEMICOLON variables np_push_global_vars_ prog_funcs . func_princ
    (18) func_princ -> . PRINCIPAL PARENTHESESL PARENTHESESR CURLYL estatuto_rep CURLYR

    PRINCIPAL       shift and go to state 20

    func_princ                     shift and go to state 19

state 15

    (3) prog_funcs -> funcion . prog_funcs
    (3) prog_funcs -> . funcion prog_funcs
    (4) prog_funcs -> . empty
    (19) funcion -> . FUNC tipo_func ID np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON variables np_add_vars_to_table_ CURLYL estatuto_rep CURLYR
    (101) empty -> .

    FUNC            shift and go to state 17
    PRINCIPAL       reduce using rule 101 (empty -> .)

    funcion                        shift and go to state 15
    prog_funcs                     shift and go to state 21
    empty                          shift and go to state 16

state 16

    (4) prog_funcs -> empty .

    PRINCIPAL       reduce using rule 4 (prog_funcs -> empty .)


state 17

    (19) funcion -> FUNC . tipo_func ID np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON variables np_add_vars_to_table_ CURLYL estatuto_rep CURLYR
    (23) tipo_func -> . tipo
    (24) tipo_func -> . VOID
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . CHAR

    VOID            shift and go to state 24
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13

    tipo_func                      shift and go to state 22
    tipo                           shift and go to state 23

state 18

    (7) variables_2 -> tipo COLON . lista_id SEMICOLON variables_rep
    (10) lista_id -> . ID dimension_var lista_id_rep

    ID              shift and go to state 26

    lista_id                       shift and go to state 25

state 19

    (1) prog -> PROGRAM ID SEMICOLON variables np_push_global_vars_ prog_funcs func_princ .

    $end            reduce using rule 1 (prog -> PROGRAM ID SEMICOLON variables np_push_global_vars_ prog_funcs func_princ .)


state 20

    (18) func_princ -> PRINCIPAL . PARENTHESESL PARENTHESESR CURLYL estatuto_rep CURLYR

    PARENTHESESL    shift and go to state 27


state 21

    (3) prog_funcs -> funcion prog_funcs .

    PRINCIPAL       reduce using rule 3 (prog_funcs -> funcion prog_funcs .)


state 22

    (19) funcion -> FUNC tipo_func . ID np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON variables np_add_vars_to_table_ CURLYL estatuto_rep CURLYR

    ID              shift and go to state 28


state 23

    (23) tipo_func -> tipo .

    ID              reduce using rule 23 (tipo_func -> tipo .)


state 24

    (24) tipo_func -> VOID .

    ID              reduce using rule 24 (tipo_func -> VOID .)


state 25

    (7) variables_2 -> tipo COLON lista_id . SEMICOLON variables_rep

    SEMICOLON       shift and go to state 29


state 26

    (10) lista_id -> ID . dimension_var lista_id_rep
    (13) dimension_var -> . SQUAREL CTE_INT SQUARER
    (14) dimension_var -> . empty
    (101) empty -> .

    SQUAREL         shift and go to state 31
    COMMA           reduce using rule 101 (empty -> .)
    SEMICOLON       reduce using rule 101 (empty -> .)

    dimension_var                  shift and go to state 30
    empty                          shift and go to state 32

state 27

    (18) func_princ -> PRINCIPAL PARENTHESESL . PARENTHESESR CURLYL estatuto_rep CURLYR

    PARENTHESESR    shift and go to state 33


state 28

    (19) funcion -> FUNC tipo_func ID . np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON variables np_add_vars_to_table_ CURLYL estatuto_rep CURLYR
    (20) np_set_scope_ -> .

    PARENTHESESL    reduce using rule 20 (np_set_scope_ -> .)

    np_set_scope_                  shift and go to state 34

state 29

    (7) variables_2 -> tipo COLON lista_id SEMICOLON . variables_rep
    (8) variables_rep -> . variables_2
    (9) variables_rep -> . empty
    (7) variables_2 -> . tipo COLON lista_id SEMICOLON variables_rep
    (101) empty -> .
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . CHAR

    FUNC            reduce using rule 101 (empty -> .)
    PRINCIPAL       reduce using rule 101 (empty -> .)
    CURLYL          reduce using rule 101 (empty -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13

    tipo                           shift and go to state 10
    variables_rep                  shift and go to state 35
    variables_2                    shift and go to state 36
    empty                          shift and go to state 37

state 30

    (10) lista_id -> ID dimension_var . lista_id_rep
    (11) lista_id_rep -> . COMMA lista_id
    (12) lista_id_rep -> . empty
    (101) empty -> .

    COMMA           shift and go to state 39
    SEMICOLON       reduce using rule 101 (empty -> .)

    lista_id_rep                   shift and go to state 38
    empty                          shift and go to state 40

state 31

    (13) dimension_var -> SQUAREL . CTE_INT SQUARER

    CTE_INT         shift and go to state 41


state 32

    (14) dimension_var -> empty .

    COMMA           reduce using rule 14 (dimension_var -> empty .)
    SEMICOLON       reduce using rule 14 (dimension_var -> empty .)


state 33

    (18) func_princ -> PRINCIPAL PARENTHESESL PARENTHESESR . CURLYL estatuto_rep CURLYR

    CURLYL          shift and go to state 42


state 34

    (19) funcion -> FUNC tipo_func ID np_set_scope_ . PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON variables np_add_vars_to_table_ CURLYL estatuto_rep CURLYR

    PARENTHESESL    shift and go to state 43


state 35

    (7) variables_2 -> tipo COLON lista_id SEMICOLON variables_rep .

    FUNC            reduce using rule 7 (variables_2 -> tipo COLON lista_id SEMICOLON variables_rep .)
    PRINCIPAL       reduce using rule 7 (variables_2 -> tipo COLON lista_id SEMICOLON variables_rep .)
    CURLYL          reduce using rule 7 (variables_2 -> tipo COLON lista_id SEMICOLON variables_rep .)


state 36

    (8) variables_rep -> variables_2 .

    FUNC            reduce using rule 8 (variables_rep -> variables_2 .)
    PRINCIPAL       reduce using rule 8 (variables_rep -> variables_2 .)
    CURLYL          reduce using rule 8 (variables_rep -> variables_2 .)


state 37

    (9) variables_rep -> empty .

    FUNC            reduce using rule 9 (variables_rep -> empty .)
    PRINCIPAL       reduce using rule 9 (variables_rep -> empty .)
    CURLYL          reduce using rule 9 (variables_rep -> empty .)


state 38

    (10) lista_id -> ID dimension_var lista_id_rep .

    SEMICOLON       reduce using rule 10 (lista_id -> ID dimension_var lista_id_rep .)


state 39

    (11) lista_id_rep -> COMMA . lista_id
    (10) lista_id -> . ID dimension_var lista_id_rep

    ID              shift and go to state 26

    lista_id                       shift and go to state 44

state 40

    (12) lista_id_rep -> empty .

    SEMICOLON       reduce using rule 12 (lista_id_rep -> empty .)


state 41

    (13) dimension_var -> SQUAREL CTE_INT . SQUARER

    SQUARER         shift and go to state 45


state 42

    (18) func_princ -> PRINCIPAL PARENTHESESL PARENTHESESR CURLYL . estatuto_rep CURLYR
    (29) estatuto_rep -> . estatuto estatuto_rep
    (30) estatuto_rep -> . empty
    (31) estatuto -> . asignacion SEMICOLON
    (32) estatuto -> . llamada SEMICOLON
    (33) estatuto -> . retorno SEMICOLON
    (34) estatuto -> . lectura SEMICOLON
    (35) estatuto -> . escritura SEMICOLON
    (36) estatuto -> . decision
    (37) estatuto -> . rep_c
    (38) estatuto -> . rep_nc
    (101) empty -> .
    (42) asignacion -> . ID np_push_var_ dimension ASSIGN np_push_operator_ expresion np_assign_quad_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR
    (64) retorno -> . RETURN PARENTHESESL expresion PARENTHESESR
    (47) lectura -> . READ PARENTHESESL lista_lectura PARENTHESESR
    (50) escritura -> . PRINT PARENTHESESL lista_escritura PARENTHESESR
    (55) decision -> . IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt
    (58) rep_c -> . WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR
    (59) rep_nc -> . FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR

    CURLYR          reduce using rule 101 (empty -> .)
    ID              shift and go to state 57
    RETURN          shift and go to state 58
    READ            shift and go to state 59
    PRINT           shift and go to state 60
    IF              shift and go to state 61
    WHILE           shift and go to state 62
    FROM            shift and go to state 63

    estatuto_rep                   shift and go to state 46
    estatuto                       shift and go to state 47
    empty                          shift and go to state 48
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    decision                       shift and go to state 54
    rep_c                          shift and go to state 55
    rep_nc                         shift and go to state 56

state 43

    (19) funcion -> FUNC tipo_func ID np_set_scope_ PARENTHESESL . funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON variables np_add_vars_to_table_ CURLYL estatuto_rep CURLYR
    (25) funcion_param -> . tipo ID funcion_param_rep
    (26) funcion_param -> . empty
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . CHAR
    (101) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13
    PARENTHESESR    reduce using rule 101 (empty -> .)

    funcion_param                  shift and go to state 64
    tipo                           shift and go to state 65
    empty                          shift and go to state 66

state 44

    (11) lista_id_rep -> COMMA lista_id .

    SEMICOLON       reduce using rule 11 (lista_id_rep -> COMMA lista_id .)


state 45

    (13) dimension_var -> SQUAREL CTE_INT SQUARER .

    COMMA           reduce using rule 13 (dimension_var -> SQUAREL CTE_INT SQUARER .)
    SEMICOLON       reduce using rule 13 (dimension_var -> SQUAREL CTE_INT SQUARER .)


state 46

    (18) func_princ -> PRINCIPAL PARENTHESESL PARENTHESESR CURLYL estatuto_rep . CURLYR

    CURLYR          shift and go to state 67


state 47

    (29) estatuto_rep -> estatuto . estatuto_rep
    (29) estatuto_rep -> . estatuto estatuto_rep
    (30) estatuto_rep -> . empty
    (31) estatuto -> . asignacion SEMICOLON
    (32) estatuto -> . llamada SEMICOLON
    (33) estatuto -> . retorno SEMICOLON
    (34) estatuto -> . lectura SEMICOLON
    (35) estatuto -> . escritura SEMICOLON
    (36) estatuto -> . decision
    (37) estatuto -> . rep_c
    (38) estatuto -> . rep_nc
    (101) empty -> .
    (42) asignacion -> . ID np_push_var_ dimension ASSIGN np_push_operator_ expresion np_assign_quad_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR
    (64) retorno -> . RETURN PARENTHESESL expresion PARENTHESESR
    (47) lectura -> . READ PARENTHESESL lista_lectura PARENTHESESR
    (50) escritura -> . PRINT PARENTHESESL lista_escritura PARENTHESESR
    (55) decision -> . IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt
    (58) rep_c -> . WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR
    (59) rep_nc -> . FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR

    CURLYR          reduce using rule 101 (empty -> .)
    ID              shift and go to state 57
    RETURN          shift and go to state 58
    READ            shift and go to state 59
    PRINT           shift and go to state 60
    IF              shift and go to state 61
    WHILE           shift and go to state 62
    FROM            shift and go to state 63

    estatuto                       shift and go to state 47
    estatuto_rep                   shift and go to state 68
    empty                          shift and go to state 48
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    decision                       shift and go to state 54
    rep_c                          shift and go to state 55
    rep_nc                         shift and go to state 56

state 48

    (30) estatuto_rep -> empty .

    CURLYR          reduce using rule 30 (estatuto_rep -> empty .)


state 49

    (31) estatuto -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 69


state 50

    (32) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 70


state 51

    (33) estatuto -> retorno . SEMICOLON

    SEMICOLON       shift and go to state 71


state 52

    (34) estatuto -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 72


state 53

    (35) estatuto -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 73


state 54

    (36) estatuto -> decision .

    ID              reduce using rule 36 (estatuto -> decision .)
    RETURN          reduce using rule 36 (estatuto -> decision .)
    READ            reduce using rule 36 (estatuto -> decision .)
    PRINT           reduce using rule 36 (estatuto -> decision .)
    IF              reduce using rule 36 (estatuto -> decision .)
    WHILE           reduce using rule 36 (estatuto -> decision .)
    FROM            reduce using rule 36 (estatuto -> decision .)
    CURLYR          reduce using rule 36 (estatuto -> decision .)


state 55

    (37) estatuto -> rep_c .

    ID              reduce using rule 37 (estatuto -> rep_c .)
    RETURN          reduce using rule 37 (estatuto -> rep_c .)
    READ            reduce using rule 37 (estatuto -> rep_c .)
    PRINT           reduce using rule 37 (estatuto -> rep_c .)
    IF              reduce using rule 37 (estatuto -> rep_c .)
    WHILE           reduce using rule 37 (estatuto -> rep_c .)
    FROM            reduce using rule 37 (estatuto -> rep_c .)
    CURLYR          reduce using rule 37 (estatuto -> rep_c .)


state 56

    (38) estatuto -> rep_nc .

    ID              reduce using rule 38 (estatuto -> rep_nc .)
    RETURN          reduce using rule 38 (estatuto -> rep_nc .)
    READ            reduce using rule 38 (estatuto -> rep_nc .)
    PRINT           reduce using rule 38 (estatuto -> rep_nc .)
    IF              reduce using rule 38 (estatuto -> rep_nc .)
    WHILE           reduce using rule 38 (estatuto -> rep_nc .)
    FROM            reduce using rule 38 (estatuto -> rep_nc .)
    CURLYR          reduce using rule 38 (estatuto -> rep_nc .)


state 57

    (42) asignacion -> ID . np_push_var_ dimension ASSIGN np_push_operator_ expresion np_assign_quad_
    (46) llamada -> ID . PARENTHESESL expresion_rep PARENTHESESR
    (40) np_push_var_ -> .

    PARENTHESESL    shift and go to state 75
    SQUAREL         reduce using rule 40 (np_push_var_ -> .)
    ASSIGN          reduce using rule 40 (np_push_var_ -> .)

    np_push_var_                   shift and go to state 74

state 58

    (64) retorno -> RETURN . PARENTHESESL expresion PARENTHESESR

    PARENTHESESL    shift and go to state 76


state 59

    (47) lectura -> READ . PARENTHESESL lista_lectura PARENTHESESR

    PARENTHESESL    shift and go to state 77


state 60

    (50) escritura -> PRINT . PARENTHESESL lista_escritura PARENTHESESR

    PARENTHESESL    shift and go to state 78


state 61

    (55) decision -> IF . PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt

    PARENTHESESL    shift and go to state 79


state 62

    (58) rep_c -> WHILE . PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR

    PARENTHESESL    shift and go to state 80


state 63

    (59) rep_nc -> FROM . asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR
    (42) asignacion -> . ID np_push_var_ dimension ASSIGN np_push_operator_ expresion np_assign_quad_

    ID              shift and go to state 82

    asignacion                     shift and go to state 81

state 64

    (19) funcion -> FUNC tipo_func ID np_set_scope_ PARENTHESESL funcion_param . np_add_func_to_directory_ PARENTHESESR SEMICOLON variables np_add_vars_to_table_ CURLYL estatuto_rep CURLYR
    (21) np_add_func_to_directory_ -> .

    PARENTHESESR    reduce using rule 21 (np_add_func_to_directory_ -> .)

    np_add_func_to_directory_      shift and go to state 83

state 65

    (25) funcion_param -> tipo . ID funcion_param_rep

    ID              shift and go to state 84


state 66

    (26) funcion_param -> empty .

    PARENTHESESR    reduce using rule 26 (funcion_param -> empty .)


state 67

    (18) func_princ -> PRINCIPAL PARENTHESESL PARENTHESESR CURLYL estatuto_rep CURLYR .

    $end            reduce using rule 18 (func_princ -> PRINCIPAL PARENTHESESL PARENTHESESR CURLYL estatuto_rep CURLYR .)


state 68

    (29) estatuto_rep -> estatuto estatuto_rep .

    CURLYR          reduce using rule 29 (estatuto_rep -> estatuto estatuto_rep .)


state 69

    (31) estatuto -> asignacion SEMICOLON .

    ID              reduce using rule 31 (estatuto -> asignacion SEMICOLON .)
    RETURN          reduce using rule 31 (estatuto -> asignacion SEMICOLON .)
    READ            reduce using rule 31 (estatuto -> asignacion SEMICOLON .)
    PRINT           reduce using rule 31 (estatuto -> asignacion SEMICOLON .)
    IF              reduce using rule 31 (estatuto -> asignacion SEMICOLON .)
    WHILE           reduce using rule 31 (estatuto -> asignacion SEMICOLON .)
    FROM            reduce using rule 31 (estatuto -> asignacion SEMICOLON .)
    CURLYR          reduce using rule 31 (estatuto -> asignacion SEMICOLON .)


state 70

    (32) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 32 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 32 (estatuto -> llamada SEMICOLON .)
    READ            reduce using rule 32 (estatuto -> llamada SEMICOLON .)
    PRINT           reduce using rule 32 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 32 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 32 (estatuto -> llamada SEMICOLON .)
    FROM            reduce using rule 32 (estatuto -> llamada SEMICOLON .)
    CURLYR          reduce using rule 32 (estatuto -> llamada SEMICOLON .)


state 71

    (33) estatuto -> retorno SEMICOLON .

    ID              reduce using rule 33 (estatuto -> retorno SEMICOLON .)
    RETURN          reduce using rule 33 (estatuto -> retorno SEMICOLON .)
    READ            reduce using rule 33 (estatuto -> retorno SEMICOLON .)
    PRINT           reduce using rule 33 (estatuto -> retorno SEMICOLON .)
    IF              reduce using rule 33 (estatuto -> retorno SEMICOLON .)
    WHILE           reduce using rule 33 (estatuto -> retorno SEMICOLON .)
    FROM            reduce using rule 33 (estatuto -> retorno SEMICOLON .)
    CURLYR          reduce using rule 33 (estatuto -> retorno SEMICOLON .)


state 72

    (34) estatuto -> lectura SEMICOLON .

    ID              reduce using rule 34 (estatuto -> lectura SEMICOLON .)
    RETURN          reduce using rule 34 (estatuto -> lectura SEMICOLON .)
    READ            reduce using rule 34 (estatuto -> lectura SEMICOLON .)
    PRINT           reduce using rule 34 (estatuto -> lectura SEMICOLON .)
    IF              reduce using rule 34 (estatuto -> lectura SEMICOLON .)
    WHILE           reduce using rule 34 (estatuto -> lectura SEMICOLON .)
    FROM            reduce using rule 34 (estatuto -> lectura SEMICOLON .)
    CURLYR          reduce using rule 34 (estatuto -> lectura SEMICOLON .)


state 73

    (35) estatuto -> escritura SEMICOLON .

    ID              reduce using rule 35 (estatuto -> escritura SEMICOLON .)
    RETURN          reduce using rule 35 (estatuto -> escritura SEMICOLON .)
    READ            reduce using rule 35 (estatuto -> escritura SEMICOLON .)
    PRINT           reduce using rule 35 (estatuto -> escritura SEMICOLON .)
    IF              reduce using rule 35 (estatuto -> escritura SEMICOLON .)
    WHILE           reduce using rule 35 (estatuto -> escritura SEMICOLON .)
    FROM            reduce using rule 35 (estatuto -> escritura SEMICOLON .)
    CURLYR          reduce using rule 35 (estatuto -> escritura SEMICOLON .)


state 74

    (42) asignacion -> ID np_push_var_ . dimension ASSIGN np_push_operator_ expresion np_assign_quad_
    (43) dimension -> . SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER
    (44) dimension -> . empty
    (101) empty -> .

    SQUAREL         shift and go to state 86
    ASSIGN          reduce using rule 101 (empty -> .)

    dimension                      shift and go to state 85
    empty                          shift and go to state 87

state 75

    (46) llamada -> ID PARENTHESESL . expresion_rep PARENTHESESR
    (60) expresion_rep -> . expresion_rep_2
    (61) expresion_rep -> . empty
    (62) expresion_rep_2 -> . expresion COMMA expresion_rep_2
    (63) expresion_rep_2 -> . expresion
    (101) empty -> .
    (65) expresion -> . exp_comp expresion_2
    (69) exp_comp -> . exp_ar exp_comp_2
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    PARENTHESESR    reduce using rule 101 (empty -> .)
    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    expresion_rep                  shift and go to state 90
    expresion_rep_2                shift and go to state 91
    empty                          shift and go to state 92
    expresion                      shift and go to state 93
    exp_comp                       shift and go to state 94
    exp_ar                         shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 76

    (64) retorno -> RETURN PARENTHESESL . expresion PARENTHESESR
    (65) expresion -> . exp_comp expresion_2
    (69) exp_comp -> . exp_ar exp_comp_2
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    expresion                      shift and go to state 103
    exp_comp                       shift and go to state 94
    exp_ar                         shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 77

    (47) lectura -> READ PARENTHESESL . lista_lectura PARENTHESESR
    (48) lista_lectura -> . ID dimension COMMA lista_lectura
    (49) lista_lectura -> . ID dimension

    ID              shift and go to state 105

    lista_lectura                  shift and go to state 104

state 78

    (50) escritura -> PRINT PARENTHESESL . lista_escritura PARENTHESESR
    (51) lista_escritura -> . letrero lista_escritura_rep
    (52) lista_escritura -> . expresion lista_escritura_rep
    (100) letrero -> . CTE_STR
    (65) expresion -> . exp_comp expresion_2
    (69) exp_comp -> . exp_ar exp_comp_2
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    CTE_STR         shift and go to state 109
    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    lista_escritura                shift and go to state 106
    letrero                        shift and go to state 107
    expresion                      shift and go to state 108
    exp_comp                       shift and go to state 94
    exp_ar                         shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 79

    (55) decision -> IF PARENTHESESL . expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt
    (65) expresion -> . exp_comp expresion_2
    (69) exp_comp -> . exp_ar exp_comp_2
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    expresion                      shift and go to state 110
    exp_comp                       shift and go to state 94
    exp_ar                         shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 80

    (58) rep_c -> WHILE PARENTHESESL . expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR
    (65) expresion -> . exp_comp expresion_2
    (69) exp_comp -> . exp_ar exp_comp_2
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    expresion                      shift and go to state 111
    exp_comp                       shift and go to state 94
    exp_ar                         shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 81

    (59) rep_nc -> FROM asignacion . UNTIL expresion DO CURLYL estatuto_rep CURLYR

    UNTIL           shift and go to state 112


state 82

    (42) asignacion -> ID . np_push_var_ dimension ASSIGN np_push_operator_ expresion np_assign_quad_
    (40) np_push_var_ -> .

    SQUAREL         reduce using rule 40 (np_push_var_ -> .)
    ASSIGN          reduce using rule 40 (np_push_var_ -> .)

    np_push_var_                   shift and go to state 74

state 83

    (19) funcion -> FUNC tipo_func ID np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ . PARENTHESESR SEMICOLON variables np_add_vars_to_table_ CURLYL estatuto_rep CURLYR

    PARENTHESESR    shift and go to state 113


state 84

    (25) funcion_param -> tipo ID . funcion_param_rep
    (27) funcion_param_rep -> . COMMA funcion_param
    (28) funcion_param_rep -> . empty
    (101) empty -> .

    COMMA           shift and go to state 115
    PARENTHESESR    reduce using rule 101 (empty -> .)

    funcion_param_rep              shift and go to state 114
    empty                          shift and go to state 116

state 85

    (42) asignacion -> ID np_push_var_ dimension . ASSIGN np_push_operator_ expresion np_assign_quad_

    ASSIGN          shift and go to state 117


state 86

    (43) dimension -> SQUAREL . np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER
    (92) np_add_false_bottom_ -> .

    ID              reduce using rule 92 (np_add_false_bottom_ -> .)
    PARENTHESESL    reduce using rule 92 (np_add_false_bottom_ -> .)
    CTE_INT         reduce using rule 92 (np_add_false_bottom_ -> .)
    CTE_CHAR        reduce using rule 92 (np_add_false_bottom_ -> .)
    CTE_FLOAT       reduce using rule 92 (np_add_false_bottom_ -> .)

    np_add_false_bottom_           shift and go to state 118

state 87

    (44) dimension -> empty .

    ASSIGN          reduce using rule 44 (dimension -> empty .)
    COMMA           reduce using rule 44 (dimension -> empty .)
    PARENTHESESR    reduce using rule 44 (dimension -> empty .)
    MULT            reduce using rule 44 (dimension -> empty .)
    DIVIDE          reduce using rule 44 (dimension -> empty .)
    PLUS            reduce using rule 44 (dimension -> empty .)
    MINUS           reduce using rule 44 (dimension -> empty .)
    LESSTHAN        reduce using rule 44 (dimension -> empty .)
    GREATERTHAN     reduce using rule 44 (dimension -> empty .)
    LESSEQUAL       reduce using rule 44 (dimension -> empty .)
    GREATEREQUAL    reduce using rule 44 (dimension -> empty .)
    EQUAL           reduce using rule 44 (dimension -> empty .)
    NOTEQUAL        reduce using rule 44 (dimension -> empty .)
    AND             reduce using rule 44 (dimension -> empty .)
    OR              reduce using rule 44 (dimension -> empty .)
    DO              reduce using rule 44 (dimension -> empty .)
    SQUARER         reduce using rule 44 (dimension -> empty .)
    SEMICOLON       reduce using rule 44 (dimension -> empty .)
    UNTIL           reduce using rule 44 (dimension -> empty .)


state 88

    (89) factor -> ID . np_push_var_ dimension
    (46) llamada -> ID . PARENTHESESL expresion_rep PARENTHESESR
    (40) np_push_var_ -> .

    PARENTHESESL    shift and go to state 75
    SQUAREL         reduce using rule 40 (np_push_var_ -> .)
    MULT            reduce using rule 40 (np_push_var_ -> .)
    DIVIDE          reduce using rule 40 (np_push_var_ -> .)
    PLUS            reduce using rule 40 (np_push_var_ -> .)
    MINUS           reduce using rule 40 (np_push_var_ -> .)
    LESSTHAN        reduce using rule 40 (np_push_var_ -> .)
    GREATERTHAN     reduce using rule 40 (np_push_var_ -> .)
    LESSEQUAL       reduce using rule 40 (np_push_var_ -> .)
    GREATEREQUAL    reduce using rule 40 (np_push_var_ -> .)
    EQUAL           reduce using rule 40 (np_push_var_ -> .)
    NOTEQUAL        reduce using rule 40 (np_push_var_ -> .)
    AND             reduce using rule 40 (np_push_var_ -> .)
    OR              reduce using rule 40 (np_push_var_ -> .)
    COMMA           reduce using rule 40 (np_push_var_ -> .)
    PARENTHESESR    reduce using rule 40 (np_push_var_ -> .)
    DO              reduce using rule 40 (np_push_var_ -> .)
    SQUARER         reduce using rule 40 (np_push_var_ -> .)
    SEMICOLON       reduce using rule 40 (np_push_var_ -> .)
    UNTIL           reduce using rule 40 (np_push_var_ -> .)

    np_push_var_                   shift and go to state 119

state 89

    (90) factor -> PARENTHESESL . np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (92) np_add_false_bottom_ -> .

    ID              reduce using rule 92 (np_add_false_bottom_ -> .)
    PARENTHESESL    reduce using rule 92 (np_add_false_bottom_ -> .)
    CTE_INT         reduce using rule 92 (np_add_false_bottom_ -> .)
    CTE_CHAR        reduce using rule 92 (np_add_false_bottom_ -> .)
    CTE_FLOAT       reduce using rule 92 (np_add_false_bottom_ -> .)

    np_add_false_bottom_           shift and go to state 120

state 90

    (46) llamada -> ID PARENTHESESL expresion_rep . PARENTHESESR

    PARENTHESESR    shift and go to state 121


state 91

    (60) expresion_rep -> expresion_rep_2 .

    PARENTHESESR    reduce using rule 60 (expresion_rep -> expresion_rep_2 .)


state 92

    (61) expresion_rep -> empty .

    PARENTHESESR    reduce using rule 61 (expresion_rep -> empty .)


state 93

    (62) expresion_rep_2 -> expresion . COMMA expresion_rep_2
    (63) expresion_rep_2 -> expresion .

    COMMA           shift and go to state 122
    PARENTHESESR    reduce using rule 63 (expresion_rep_2 -> expresion .)


state 94

    (65) expresion -> exp_comp . expresion_2
    (66) expresion_2 -> . AND expresion
    (67) expresion_2 -> . OR expresion
    (68) expresion_2 -> . empty
    (101) empty -> .

    AND             shift and go to state 124
    OR              shift and go to state 125
    COMMA           reduce using rule 101 (empty -> .)
    PARENTHESESR    reduce using rule 101 (empty -> .)
    DO              reduce using rule 101 (empty -> .)
    SQUARER         reduce using rule 101 (empty -> .)
    SEMICOLON       reduce using rule 101 (empty -> .)
    UNTIL           reduce using rule 101 (empty -> .)

    expresion_2                    shift and go to state 123
    empty                          shift and go to state 126

state 95

    (69) exp_comp -> exp_ar . exp_comp_2
    (70) exp_comp_2 -> . comp_sym exp_ar
    (71) exp_comp_2 -> . empty
    (72) comp_sym -> . LESSTHAN
    (73) comp_sym -> . GREATERTHAN
    (74) comp_sym -> . LESSEQUAL
    (75) comp_sym -> . GREATEREQUAL
    (76) comp_sym -> . EQUAL
    (77) comp_sym -> . NOTEQUAL
    (101) empty -> .

    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    LESSEQUAL       shift and go to state 132
    GREATEREQUAL    shift and go to state 133
    EQUAL           shift and go to state 134
    NOTEQUAL        shift and go to state 135
    AND             reduce using rule 101 (empty -> .)
    OR              reduce using rule 101 (empty -> .)
    COMMA           reduce using rule 101 (empty -> .)
    PARENTHESESR    reduce using rule 101 (empty -> .)
    DO              reduce using rule 101 (empty -> .)
    SQUARER         reduce using rule 101 (empty -> .)
    SEMICOLON       reduce using rule 101 (empty -> .)
    UNTIL           reduce using rule 101 (empty -> .)

    exp_comp_2                     shift and go to state 127
    comp_sym                       shift and go to state 128
    empty                          shift and go to state 129

state 96

    (78) exp_ar -> termino . np_operation_quad_ exp_ar_2
    (82) np_operation_quad_ -> .

    PLUS            reduce using rule 82 (np_operation_quad_ -> .)
    MINUS           reduce using rule 82 (np_operation_quad_ -> .)
    LESSTHAN        reduce using rule 82 (np_operation_quad_ -> .)
    GREATERTHAN     reduce using rule 82 (np_operation_quad_ -> .)
    LESSEQUAL       reduce using rule 82 (np_operation_quad_ -> .)
    GREATEREQUAL    reduce using rule 82 (np_operation_quad_ -> .)
    EQUAL           reduce using rule 82 (np_operation_quad_ -> .)
    NOTEQUAL        reduce using rule 82 (np_operation_quad_ -> .)
    AND             reduce using rule 82 (np_operation_quad_ -> .)
    OR              reduce using rule 82 (np_operation_quad_ -> .)
    COMMA           reduce using rule 82 (np_operation_quad_ -> .)
    PARENTHESESR    reduce using rule 82 (np_operation_quad_ -> .)
    DO              reduce using rule 82 (np_operation_quad_ -> .)
    SQUARER         reduce using rule 82 (np_operation_quad_ -> .)
    SEMICOLON       reduce using rule 82 (np_operation_quad_ -> .)
    UNTIL           reduce using rule 82 (np_operation_quad_ -> .)

    np_operation_quad_             shift and go to state 136

state 97

    (83) termino -> factor . np_check_op_stack_factor_ termino_2
    (87) np_check_op_stack_factor_ -> .

    MULT            reduce using rule 87 (np_check_op_stack_factor_ -> .)
    DIVIDE          reduce using rule 87 (np_check_op_stack_factor_ -> .)
    PLUS            reduce using rule 87 (np_check_op_stack_factor_ -> .)
    MINUS           reduce using rule 87 (np_check_op_stack_factor_ -> .)
    LESSTHAN        reduce using rule 87 (np_check_op_stack_factor_ -> .)
    GREATERTHAN     reduce using rule 87 (np_check_op_stack_factor_ -> .)
    LESSEQUAL       reduce using rule 87 (np_check_op_stack_factor_ -> .)
    GREATEREQUAL    reduce using rule 87 (np_check_op_stack_factor_ -> .)
    EQUAL           reduce using rule 87 (np_check_op_stack_factor_ -> .)
    NOTEQUAL        reduce using rule 87 (np_check_op_stack_factor_ -> .)
    AND             reduce using rule 87 (np_check_op_stack_factor_ -> .)
    OR              reduce using rule 87 (np_check_op_stack_factor_ -> .)
    COMMA           reduce using rule 87 (np_check_op_stack_factor_ -> .)
    PARENTHESESR    reduce using rule 87 (np_check_op_stack_factor_ -> .)
    DO              reduce using rule 87 (np_check_op_stack_factor_ -> .)
    SQUARER         reduce using rule 87 (np_check_op_stack_factor_ -> .)
    SEMICOLON       reduce using rule 87 (np_check_op_stack_factor_ -> .)
    UNTIL           reduce using rule 87 (np_check_op_stack_factor_ -> .)

    np_check_op_stack_factor_      shift and go to state 137

state 98

    (88) factor -> const .

    MULT            reduce using rule 88 (factor -> const .)
    DIVIDE          reduce using rule 88 (factor -> const .)
    PLUS            reduce using rule 88 (factor -> const .)
    MINUS           reduce using rule 88 (factor -> const .)
    LESSTHAN        reduce using rule 88 (factor -> const .)
    GREATERTHAN     reduce using rule 88 (factor -> const .)
    LESSEQUAL       reduce using rule 88 (factor -> const .)
    GREATEREQUAL    reduce using rule 88 (factor -> const .)
    EQUAL           reduce using rule 88 (factor -> const .)
    NOTEQUAL        reduce using rule 88 (factor -> const .)
    AND             reduce using rule 88 (factor -> const .)
    OR              reduce using rule 88 (factor -> const .)
    COMMA           reduce using rule 88 (factor -> const .)
    PARENTHESESR    reduce using rule 88 (factor -> const .)
    DO              reduce using rule 88 (factor -> const .)
    SQUARER         reduce using rule 88 (factor -> const .)
    SEMICOLON       reduce using rule 88 (factor -> const .)
    UNTIL           reduce using rule 88 (factor -> const .)


state 99

    (91) factor -> llamada .

    MULT            reduce using rule 91 (factor -> llamada .)
    DIVIDE          reduce using rule 91 (factor -> llamada .)
    PLUS            reduce using rule 91 (factor -> llamada .)
    MINUS           reduce using rule 91 (factor -> llamada .)
    LESSTHAN        reduce using rule 91 (factor -> llamada .)
    GREATERTHAN     reduce using rule 91 (factor -> llamada .)
    LESSEQUAL       reduce using rule 91 (factor -> llamada .)
    GREATEREQUAL    reduce using rule 91 (factor -> llamada .)
    EQUAL           reduce using rule 91 (factor -> llamada .)
    NOTEQUAL        reduce using rule 91 (factor -> llamada .)
    AND             reduce using rule 91 (factor -> llamada .)
    OR              reduce using rule 91 (factor -> llamada .)
    COMMA           reduce using rule 91 (factor -> llamada .)
    PARENTHESESR    reduce using rule 91 (factor -> llamada .)
    DO              reduce using rule 91 (factor -> llamada .)
    SQUARER         reduce using rule 91 (factor -> llamada .)
    SEMICOLON       reduce using rule 91 (factor -> llamada .)
    UNTIL           reduce using rule 91 (factor -> llamada .)


state 100

    (94) const -> CTE_INT . np_push_const_int_
    (97) np_push_const_int_ -> .

    MULT            reduce using rule 97 (np_push_const_int_ -> .)
    DIVIDE          reduce using rule 97 (np_push_const_int_ -> .)
    PLUS            reduce using rule 97 (np_push_const_int_ -> .)
    MINUS           reduce using rule 97 (np_push_const_int_ -> .)
    LESSTHAN        reduce using rule 97 (np_push_const_int_ -> .)
    GREATERTHAN     reduce using rule 97 (np_push_const_int_ -> .)
    LESSEQUAL       reduce using rule 97 (np_push_const_int_ -> .)
    GREATEREQUAL    reduce using rule 97 (np_push_const_int_ -> .)
    EQUAL           reduce using rule 97 (np_push_const_int_ -> .)
    NOTEQUAL        reduce using rule 97 (np_push_const_int_ -> .)
    AND             reduce using rule 97 (np_push_const_int_ -> .)
    OR              reduce using rule 97 (np_push_const_int_ -> .)
    COMMA           reduce using rule 97 (np_push_const_int_ -> .)
    PARENTHESESR    reduce using rule 97 (np_push_const_int_ -> .)
    DO              reduce using rule 97 (np_push_const_int_ -> .)
    SQUARER         reduce using rule 97 (np_push_const_int_ -> .)
    SEMICOLON       reduce using rule 97 (np_push_const_int_ -> .)
    UNTIL           reduce using rule 97 (np_push_const_int_ -> .)

    np_push_const_int_             shift and go to state 138

state 101

    (95) const -> CTE_CHAR . np_push_const_char_
    (98) np_push_const_char_ -> .

    MULT            reduce using rule 98 (np_push_const_char_ -> .)
    DIVIDE          reduce using rule 98 (np_push_const_char_ -> .)
    PLUS            reduce using rule 98 (np_push_const_char_ -> .)
    MINUS           reduce using rule 98 (np_push_const_char_ -> .)
    LESSTHAN        reduce using rule 98 (np_push_const_char_ -> .)
    GREATERTHAN     reduce using rule 98 (np_push_const_char_ -> .)
    LESSEQUAL       reduce using rule 98 (np_push_const_char_ -> .)
    GREATEREQUAL    reduce using rule 98 (np_push_const_char_ -> .)
    EQUAL           reduce using rule 98 (np_push_const_char_ -> .)
    NOTEQUAL        reduce using rule 98 (np_push_const_char_ -> .)
    AND             reduce using rule 98 (np_push_const_char_ -> .)
    OR              reduce using rule 98 (np_push_const_char_ -> .)
    COMMA           reduce using rule 98 (np_push_const_char_ -> .)
    PARENTHESESR    reduce using rule 98 (np_push_const_char_ -> .)
    DO              reduce using rule 98 (np_push_const_char_ -> .)
    SQUARER         reduce using rule 98 (np_push_const_char_ -> .)
    SEMICOLON       reduce using rule 98 (np_push_const_char_ -> .)
    UNTIL           reduce using rule 98 (np_push_const_char_ -> .)

    np_push_const_char_            shift and go to state 139

state 102

    (96) const -> CTE_FLOAT . np_push_const_float_
    (99) np_push_const_float_ -> .

    MULT            reduce using rule 99 (np_push_const_float_ -> .)
    DIVIDE          reduce using rule 99 (np_push_const_float_ -> .)
    PLUS            reduce using rule 99 (np_push_const_float_ -> .)
    MINUS           reduce using rule 99 (np_push_const_float_ -> .)
    LESSTHAN        reduce using rule 99 (np_push_const_float_ -> .)
    GREATERTHAN     reduce using rule 99 (np_push_const_float_ -> .)
    LESSEQUAL       reduce using rule 99 (np_push_const_float_ -> .)
    GREATEREQUAL    reduce using rule 99 (np_push_const_float_ -> .)
    EQUAL           reduce using rule 99 (np_push_const_float_ -> .)
    NOTEQUAL        reduce using rule 99 (np_push_const_float_ -> .)
    AND             reduce using rule 99 (np_push_const_float_ -> .)
    OR              reduce using rule 99 (np_push_const_float_ -> .)
    COMMA           reduce using rule 99 (np_push_const_float_ -> .)
    PARENTHESESR    reduce using rule 99 (np_push_const_float_ -> .)
    DO              reduce using rule 99 (np_push_const_float_ -> .)
    SQUARER         reduce using rule 99 (np_push_const_float_ -> .)
    SEMICOLON       reduce using rule 99 (np_push_const_float_ -> .)
    UNTIL           reduce using rule 99 (np_push_const_float_ -> .)

    np_push_const_float_           shift and go to state 140

state 103

    (64) retorno -> RETURN PARENTHESESL expresion . PARENTHESESR

    PARENTHESESR    shift and go to state 141


state 104

    (47) lectura -> READ PARENTHESESL lista_lectura . PARENTHESESR

    PARENTHESESR    shift and go to state 142


state 105

    (48) lista_lectura -> ID . dimension COMMA lista_lectura
    (49) lista_lectura -> ID . dimension
    (43) dimension -> . SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER
    (44) dimension -> . empty
    (101) empty -> .

    SQUAREL         shift and go to state 86
    COMMA           reduce using rule 101 (empty -> .)
    PARENTHESESR    reduce using rule 101 (empty -> .)

    dimension                      shift and go to state 143
    empty                          shift and go to state 87

state 106

    (50) escritura -> PRINT PARENTHESESL lista_escritura . PARENTHESESR

    PARENTHESESR    shift and go to state 144


state 107

    (51) lista_escritura -> letrero . lista_escritura_rep
    (53) lista_escritura_rep -> . COMMA lista_escritura
    (54) lista_escritura_rep -> . empty
    (101) empty -> .

    COMMA           shift and go to state 146
    PARENTHESESR    reduce using rule 101 (empty -> .)

    lista_escritura_rep            shift and go to state 145
    empty                          shift and go to state 147

state 108

    (52) lista_escritura -> expresion . lista_escritura_rep
    (53) lista_escritura_rep -> . COMMA lista_escritura
    (54) lista_escritura_rep -> . empty
    (101) empty -> .

    COMMA           shift and go to state 146
    PARENTHESESR    reduce using rule 101 (empty -> .)

    lista_escritura_rep            shift and go to state 148
    empty                          shift and go to state 147

state 109

    (100) letrero -> CTE_STR .

    COMMA           reduce using rule 100 (letrero -> CTE_STR .)
    PARENTHESESR    reduce using rule 100 (letrero -> CTE_STR .)


state 110

    (55) decision -> IF PARENTHESESL expresion . PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt

    PARENTHESESR    shift and go to state 149


state 111

    (58) rep_c -> WHILE PARENTHESESL expresion . PARENTHESESR DO CURLYL estatuto_rep CURLYR

    PARENTHESESR    shift and go to state 150


state 112

    (59) rep_nc -> FROM asignacion UNTIL . expresion DO CURLYL estatuto_rep CURLYR
    (65) expresion -> . exp_comp expresion_2
    (69) exp_comp -> . exp_ar exp_comp_2
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    expresion                      shift and go to state 151
    exp_comp                       shift and go to state 94
    exp_ar                         shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 113

    (19) funcion -> FUNC tipo_func ID np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR . SEMICOLON variables np_add_vars_to_table_ CURLYL estatuto_rep CURLYR

    SEMICOLON       shift and go to state 152


state 114

    (25) funcion_param -> tipo ID funcion_param_rep .

    PARENTHESESR    reduce using rule 25 (funcion_param -> tipo ID funcion_param_rep .)


state 115

    (27) funcion_param_rep -> COMMA . funcion_param
    (25) funcion_param -> . tipo ID funcion_param_rep
    (26) funcion_param -> . empty
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . CHAR
    (101) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13
    PARENTHESESR    reduce using rule 101 (empty -> .)

    funcion_param                  shift and go to state 153
    tipo                           shift and go to state 65
    empty                          shift and go to state 66

state 116

    (28) funcion_param_rep -> empty .

    PARENTHESESR    reduce using rule 28 (funcion_param_rep -> empty .)


state 117

    (42) asignacion -> ID np_push_var_ dimension ASSIGN . np_push_operator_ expresion np_assign_quad_
    (41) np_push_operator_ -> .

    ID              reduce using rule 41 (np_push_operator_ -> .)
    PARENTHESESL    reduce using rule 41 (np_push_operator_ -> .)
    CTE_INT         reduce using rule 41 (np_push_operator_ -> .)
    CTE_CHAR        reduce using rule 41 (np_push_operator_ -> .)
    CTE_FLOAT       reduce using rule 41 (np_push_operator_ -> .)

    np_push_operator_              shift and go to state 154

state 118

    (43) dimension -> SQUAREL np_add_false_bottom_ . expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER
    (65) expresion -> . exp_comp expresion_2
    (69) exp_comp -> . exp_ar exp_comp_2
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    expresion                      shift and go to state 155
    exp_comp                       shift and go to state 94
    exp_ar                         shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 119

    (89) factor -> ID np_push_var_ . dimension
    (43) dimension -> . SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER
    (44) dimension -> . empty
    (101) empty -> .

    SQUAREL         shift and go to state 86
    MULT            reduce using rule 101 (empty -> .)
    DIVIDE          reduce using rule 101 (empty -> .)
    PLUS            reduce using rule 101 (empty -> .)
    MINUS           reduce using rule 101 (empty -> .)
    LESSTHAN        reduce using rule 101 (empty -> .)
    GREATERTHAN     reduce using rule 101 (empty -> .)
    LESSEQUAL       reduce using rule 101 (empty -> .)
    GREATEREQUAL    reduce using rule 101 (empty -> .)
    EQUAL           reduce using rule 101 (empty -> .)
    NOTEQUAL        reduce using rule 101 (empty -> .)
    AND             reduce using rule 101 (empty -> .)
    OR              reduce using rule 101 (empty -> .)
    COMMA           reduce using rule 101 (empty -> .)
    PARENTHESESR    reduce using rule 101 (empty -> .)
    DO              reduce using rule 101 (empty -> .)
    SQUARER         reduce using rule 101 (empty -> .)
    SEMICOLON       reduce using rule 101 (empty -> .)
    UNTIL           reduce using rule 101 (empty -> .)

    dimension                      shift and go to state 156
    empty                          shift and go to state 87

state 120

    (90) factor -> PARENTHESESL np_add_false_bottom_ . expresion PARENTHESESR np_remove_false_bottom_
    (65) expresion -> . exp_comp expresion_2
    (69) exp_comp -> . exp_ar exp_comp_2
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    expresion                      shift and go to state 157
    exp_comp                       shift and go to state 94
    exp_ar                         shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 121

    (46) llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .

    SEMICOLON       reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    MULT            reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    DIVIDE          reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    PLUS            reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    MINUS           reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    LESSTHAN        reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    GREATERTHAN     reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    LESSEQUAL       reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    GREATEREQUAL    reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    EQUAL           reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    NOTEQUAL        reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    AND             reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    OR              reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    COMMA           reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    PARENTHESESR    reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    DO              reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    SQUARER         reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)
    UNTIL           reduce using rule 46 (llamada -> ID PARENTHESESL expresion_rep PARENTHESESR .)


state 122

    (62) expresion_rep_2 -> expresion COMMA . expresion_rep_2
    (62) expresion_rep_2 -> . expresion COMMA expresion_rep_2
    (63) expresion_rep_2 -> . expresion
    (65) expresion -> . exp_comp expresion_2
    (69) exp_comp -> . exp_ar exp_comp_2
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    expresion                      shift and go to state 93
    expresion_rep_2                shift and go to state 158
    exp_comp                       shift and go to state 94
    exp_ar                         shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 123

    (65) expresion -> exp_comp expresion_2 .

    COMMA           reduce using rule 65 (expresion -> exp_comp expresion_2 .)
    PARENTHESESR    reduce using rule 65 (expresion -> exp_comp expresion_2 .)
    DO              reduce using rule 65 (expresion -> exp_comp expresion_2 .)
    SQUARER         reduce using rule 65 (expresion -> exp_comp expresion_2 .)
    SEMICOLON       reduce using rule 65 (expresion -> exp_comp expresion_2 .)
    UNTIL           reduce using rule 65 (expresion -> exp_comp expresion_2 .)


state 124

    (66) expresion_2 -> AND . expresion
    (65) expresion -> . exp_comp expresion_2
    (69) exp_comp -> . exp_ar exp_comp_2
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    expresion                      shift and go to state 159
    exp_comp                       shift and go to state 94
    exp_ar                         shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 125

    (67) expresion_2 -> OR . expresion
    (65) expresion -> . exp_comp expresion_2
    (69) exp_comp -> . exp_ar exp_comp_2
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    expresion                      shift and go to state 160
    exp_comp                       shift and go to state 94
    exp_ar                         shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 126

    (68) expresion_2 -> empty .

    COMMA           reduce using rule 68 (expresion_2 -> empty .)
    PARENTHESESR    reduce using rule 68 (expresion_2 -> empty .)
    DO              reduce using rule 68 (expresion_2 -> empty .)
    SQUARER         reduce using rule 68 (expresion_2 -> empty .)
    SEMICOLON       reduce using rule 68 (expresion_2 -> empty .)
    UNTIL           reduce using rule 68 (expresion_2 -> empty .)


state 127

    (69) exp_comp -> exp_ar exp_comp_2 .

    AND             reduce using rule 69 (exp_comp -> exp_ar exp_comp_2 .)
    OR              reduce using rule 69 (exp_comp -> exp_ar exp_comp_2 .)
    COMMA           reduce using rule 69 (exp_comp -> exp_ar exp_comp_2 .)
    PARENTHESESR    reduce using rule 69 (exp_comp -> exp_ar exp_comp_2 .)
    DO              reduce using rule 69 (exp_comp -> exp_ar exp_comp_2 .)
    SQUARER         reduce using rule 69 (exp_comp -> exp_ar exp_comp_2 .)
    SEMICOLON       reduce using rule 69 (exp_comp -> exp_ar exp_comp_2 .)
    UNTIL           reduce using rule 69 (exp_comp -> exp_ar exp_comp_2 .)


state 128

    (70) exp_comp_2 -> comp_sym . exp_ar
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    exp_ar                         shift and go to state 161
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 129

    (71) exp_comp_2 -> empty .

    AND             reduce using rule 71 (exp_comp_2 -> empty .)
    OR              reduce using rule 71 (exp_comp_2 -> empty .)
    COMMA           reduce using rule 71 (exp_comp_2 -> empty .)
    PARENTHESESR    reduce using rule 71 (exp_comp_2 -> empty .)
    DO              reduce using rule 71 (exp_comp_2 -> empty .)
    SQUARER         reduce using rule 71 (exp_comp_2 -> empty .)
    SEMICOLON       reduce using rule 71 (exp_comp_2 -> empty .)
    UNTIL           reduce using rule 71 (exp_comp_2 -> empty .)


state 130

    (72) comp_sym -> LESSTHAN .

    ID              reduce using rule 72 (comp_sym -> LESSTHAN .)
    PARENTHESESL    reduce using rule 72 (comp_sym -> LESSTHAN .)
    CTE_INT         reduce using rule 72 (comp_sym -> LESSTHAN .)
    CTE_CHAR        reduce using rule 72 (comp_sym -> LESSTHAN .)
    CTE_FLOAT       reduce using rule 72 (comp_sym -> LESSTHAN .)


state 131

    (73) comp_sym -> GREATERTHAN .

    ID              reduce using rule 73 (comp_sym -> GREATERTHAN .)
    PARENTHESESL    reduce using rule 73 (comp_sym -> GREATERTHAN .)
    CTE_INT         reduce using rule 73 (comp_sym -> GREATERTHAN .)
    CTE_CHAR        reduce using rule 73 (comp_sym -> GREATERTHAN .)
    CTE_FLOAT       reduce using rule 73 (comp_sym -> GREATERTHAN .)


state 132

    (74) comp_sym -> LESSEQUAL .

    ID              reduce using rule 74 (comp_sym -> LESSEQUAL .)
    PARENTHESESL    reduce using rule 74 (comp_sym -> LESSEQUAL .)
    CTE_INT         reduce using rule 74 (comp_sym -> LESSEQUAL .)
    CTE_CHAR        reduce using rule 74 (comp_sym -> LESSEQUAL .)
    CTE_FLOAT       reduce using rule 74 (comp_sym -> LESSEQUAL .)


state 133

    (75) comp_sym -> GREATEREQUAL .

    ID              reduce using rule 75 (comp_sym -> GREATEREQUAL .)
    PARENTHESESL    reduce using rule 75 (comp_sym -> GREATEREQUAL .)
    CTE_INT         reduce using rule 75 (comp_sym -> GREATEREQUAL .)
    CTE_CHAR        reduce using rule 75 (comp_sym -> GREATEREQUAL .)
    CTE_FLOAT       reduce using rule 75 (comp_sym -> GREATEREQUAL .)


state 134

    (76) comp_sym -> EQUAL .

    ID              reduce using rule 76 (comp_sym -> EQUAL .)
    PARENTHESESL    reduce using rule 76 (comp_sym -> EQUAL .)
    CTE_INT         reduce using rule 76 (comp_sym -> EQUAL .)
    CTE_CHAR        reduce using rule 76 (comp_sym -> EQUAL .)
    CTE_FLOAT       reduce using rule 76 (comp_sym -> EQUAL .)


state 135

    (77) comp_sym -> NOTEQUAL .

    ID              reduce using rule 77 (comp_sym -> NOTEQUAL .)
    PARENTHESESL    reduce using rule 77 (comp_sym -> NOTEQUAL .)
    CTE_INT         reduce using rule 77 (comp_sym -> NOTEQUAL .)
    CTE_CHAR        reduce using rule 77 (comp_sym -> NOTEQUAL .)
    CTE_FLOAT       reduce using rule 77 (comp_sym -> NOTEQUAL .)


state 136

    (78) exp_ar -> termino np_operation_quad_ . exp_ar_2
    (79) exp_ar_2 -> . PLUS np_push_operator_ exp_ar
    (80) exp_ar_2 -> . MINUS np_push_operator_ exp_ar
    (81) exp_ar_2 -> . empty
    (101) empty -> .

    PLUS            shift and go to state 163
    MINUS           shift and go to state 164
    LESSTHAN        reduce using rule 101 (empty -> .)
    GREATERTHAN     reduce using rule 101 (empty -> .)
    LESSEQUAL       reduce using rule 101 (empty -> .)
    GREATEREQUAL    reduce using rule 101 (empty -> .)
    EQUAL           reduce using rule 101 (empty -> .)
    NOTEQUAL        reduce using rule 101 (empty -> .)
    AND             reduce using rule 101 (empty -> .)
    OR              reduce using rule 101 (empty -> .)
    COMMA           reduce using rule 101 (empty -> .)
    PARENTHESESR    reduce using rule 101 (empty -> .)
    DO              reduce using rule 101 (empty -> .)
    SQUARER         reduce using rule 101 (empty -> .)
    SEMICOLON       reduce using rule 101 (empty -> .)
    UNTIL           reduce using rule 101 (empty -> .)

    exp_ar_2                       shift and go to state 162
    empty                          shift and go to state 165

state 137

    (83) termino -> factor np_check_op_stack_factor_ . termino_2
    (84) termino_2 -> . MULT np_push_operator_ termino
    (85) termino_2 -> . DIVIDE np_push_operator_ termino
    (86) termino_2 -> . empty
    (101) empty -> .

    MULT            shift and go to state 167
    DIVIDE          shift and go to state 168
    PLUS            reduce using rule 101 (empty -> .)
    MINUS           reduce using rule 101 (empty -> .)
    LESSTHAN        reduce using rule 101 (empty -> .)
    GREATERTHAN     reduce using rule 101 (empty -> .)
    LESSEQUAL       reduce using rule 101 (empty -> .)
    GREATEREQUAL    reduce using rule 101 (empty -> .)
    EQUAL           reduce using rule 101 (empty -> .)
    NOTEQUAL        reduce using rule 101 (empty -> .)
    AND             reduce using rule 101 (empty -> .)
    OR              reduce using rule 101 (empty -> .)
    COMMA           reduce using rule 101 (empty -> .)
    PARENTHESESR    reduce using rule 101 (empty -> .)
    DO              reduce using rule 101 (empty -> .)
    SQUARER         reduce using rule 101 (empty -> .)
    SEMICOLON       reduce using rule 101 (empty -> .)
    UNTIL           reduce using rule 101 (empty -> .)

    termino_2                      shift and go to state 166
    empty                          shift and go to state 169

state 138

    (94) const -> CTE_INT np_push_const_int_ .

    MULT            reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    DIVIDE          reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    PLUS            reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    MINUS           reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    LESSTHAN        reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    GREATERTHAN     reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    LESSEQUAL       reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    GREATEREQUAL    reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    EQUAL           reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    NOTEQUAL        reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    AND             reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    OR              reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    COMMA           reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    PARENTHESESR    reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    DO              reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    SQUARER         reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    SEMICOLON       reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)
    UNTIL           reduce using rule 94 (const -> CTE_INT np_push_const_int_ .)


state 139

    (95) const -> CTE_CHAR np_push_const_char_ .

    MULT            reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    DIVIDE          reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    PLUS            reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    MINUS           reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    LESSTHAN        reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    GREATERTHAN     reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    LESSEQUAL       reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    GREATEREQUAL    reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    EQUAL           reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    NOTEQUAL        reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    AND             reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    OR              reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    COMMA           reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    PARENTHESESR    reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    DO              reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    SQUARER         reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    SEMICOLON       reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)
    UNTIL           reduce using rule 95 (const -> CTE_CHAR np_push_const_char_ .)


state 140

    (96) const -> CTE_FLOAT np_push_const_float_ .

    MULT            reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    DIVIDE          reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    PLUS            reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    MINUS           reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    LESSTHAN        reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    GREATERTHAN     reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    LESSEQUAL       reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    GREATEREQUAL    reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    EQUAL           reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    NOTEQUAL        reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    AND             reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    OR              reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    COMMA           reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    PARENTHESESR    reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    DO              reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    SQUARER         reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    SEMICOLON       reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)
    UNTIL           reduce using rule 96 (const -> CTE_FLOAT np_push_const_float_ .)


state 141

    (64) retorno -> RETURN PARENTHESESL expresion PARENTHESESR .

    SEMICOLON       reduce using rule 64 (retorno -> RETURN PARENTHESESL expresion PARENTHESESR .)


state 142

    (47) lectura -> READ PARENTHESESL lista_lectura PARENTHESESR .

    SEMICOLON       reduce using rule 47 (lectura -> READ PARENTHESESL lista_lectura PARENTHESESR .)


state 143

    (48) lista_lectura -> ID dimension . COMMA lista_lectura
    (49) lista_lectura -> ID dimension .

    COMMA           shift and go to state 170
    PARENTHESESR    reduce using rule 49 (lista_lectura -> ID dimension .)


state 144

    (50) escritura -> PRINT PARENTHESESL lista_escritura PARENTHESESR .

    SEMICOLON       reduce using rule 50 (escritura -> PRINT PARENTHESESL lista_escritura PARENTHESESR .)


state 145

    (51) lista_escritura -> letrero lista_escritura_rep .

    PARENTHESESR    reduce using rule 51 (lista_escritura -> letrero lista_escritura_rep .)


state 146

    (53) lista_escritura_rep -> COMMA . lista_escritura
    (51) lista_escritura -> . letrero lista_escritura_rep
    (52) lista_escritura -> . expresion lista_escritura_rep
    (100) letrero -> . CTE_STR
    (65) expresion -> . exp_comp expresion_2
    (69) exp_comp -> . exp_ar exp_comp_2
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    CTE_STR         shift and go to state 109
    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    lista_escritura                shift and go to state 171
    letrero                        shift and go to state 107
    expresion                      shift and go to state 108
    exp_comp                       shift and go to state 94
    exp_ar                         shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 147

    (54) lista_escritura_rep -> empty .

    PARENTHESESR    reduce using rule 54 (lista_escritura_rep -> empty .)


state 148

    (52) lista_escritura -> expresion lista_escritura_rep .

    PARENTHESESR    reduce using rule 52 (lista_escritura -> expresion lista_escritura_rep .)


state 149

    (55) decision -> IF PARENTHESESL expresion PARENTHESESR . THEN CURLYL estatuto_rep CURLYR decision_alt

    THEN            shift and go to state 172


state 150

    (58) rep_c -> WHILE PARENTHESESL expresion PARENTHESESR . DO CURLYL estatuto_rep CURLYR

    DO              shift and go to state 173


state 151

    (59) rep_nc -> FROM asignacion UNTIL expresion . DO CURLYL estatuto_rep CURLYR

    DO              shift and go to state 174


state 152

    (19) funcion -> FUNC tipo_func ID np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON . variables np_add_vars_to_table_ CURLYL estatuto_rep CURLYR
    (5) variables -> . VAR variables_2
    (6) variables -> . empty
    (101) empty -> .

    VAR             shift and go to state 6
    CURLYL          reduce using rule 101 (empty -> .)

    variables                      shift and go to state 175
    empty                          shift and go to state 7

state 153

    (27) funcion_param_rep -> COMMA funcion_param .

    PARENTHESESR    reduce using rule 27 (funcion_param_rep -> COMMA funcion_param .)


state 154

    (42) asignacion -> ID np_push_var_ dimension ASSIGN np_push_operator_ . expresion np_assign_quad_
    (65) expresion -> . exp_comp expresion_2
    (69) exp_comp -> . exp_ar exp_comp_2
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    expresion                      shift and go to state 176
    exp_comp                       shift and go to state 94
    exp_ar                         shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 155

    (43) dimension -> SQUAREL np_add_false_bottom_ expresion . np_pop_dimension_ np_remove_false_bottom_ SQUARER
    (45) np_pop_dimension_ -> .

    SQUARER         reduce using rule 45 (np_pop_dimension_ -> .)

    np_pop_dimension_              shift and go to state 177

state 156

    (89) factor -> ID np_push_var_ dimension .

    MULT            reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    DIVIDE          reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    PLUS            reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    MINUS           reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    LESSTHAN        reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    GREATERTHAN     reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    LESSEQUAL       reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    GREATEREQUAL    reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    EQUAL           reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    NOTEQUAL        reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    AND             reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    OR              reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    COMMA           reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    PARENTHESESR    reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    DO              reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    SQUARER         reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    SEMICOLON       reduce using rule 89 (factor -> ID np_push_var_ dimension .)
    UNTIL           reduce using rule 89 (factor -> ID np_push_var_ dimension .)


state 157

    (90) factor -> PARENTHESESL np_add_false_bottom_ expresion . PARENTHESESR np_remove_false_bottom_

    PARENTHESESR    shift and go to state 178


state 158

    (62) expresion_rep_2 -> expresion COMMA expresion_rep_2 .

    PARENTHESESR    reduce using rule 62 (expresion_rep_2 -> expresion COMMA expresion_rep_2 .)


state 159

    (66) expresion_2 -> AND expresion .

    COMMA           reduce using rule 66 (expresion_2 -> AND expresion .)
    PARENTHESESR    reduce using rule 66 (expresion_2 -> AND expresion .)
    DO              reduce using rule 66 (expresion_2 -> AND expresion .)
    SQUARER         reduce using rule 66 (expresion_2 -> AND expresion .)
    SEMICOLON       reduce using rule 66 (expresion_2 -> AND expresion .)
    UNTIL           reduce using rule 66 (expresion_2 -> AND expresion .)


state 160

    (67) expresion_2 -> OR expresion .

    COMMA           reduce using rule 67 (expresion_2 -> OR expresion .)
    PARENTHESESR    reduce using rule 67 (expresion_2 -> OR expresion .)
    DO              reduce using rule 67 (expresion_2 -> OR expresion .)
    SQUARER         reduce using rule 67 (expresion_2 -> OR expresion .)
    SEMICOLON       reduce using rule 67 (expresion_2 -> OR expresion .)
    UNTIL           reduce using rule 67 (expresion_2 -> OR expresion .)


state 161

    (70) exp_comp_2 -> comp_sym exp_ar .

    AND             reduce using rule 70 (exp_comp_2 -> comp_sym exp_ar .)
    OR              reduce using rule 70 (exp_comp_2 -> comp_sym exp_ar .)
    COMMA           reduce using rule 70 (exp_comp_2 -> comp_sym exp_ar .)
    PARENTHESESR    reduce using rule 70 (exp_comp_2 -> comp_sym exp_ar .)
    DO              reduce using rule 70 (exp_comp_2 -> comp_sym exp_ar .)
    SQUARER         reduce using rule 70 (exp_comp_2 -> comp_sym exp_ar .)
    SEMICOLON       reduce using rule 70 (exp_comp_2 -> comp_sym exp_ar .)
    UNTIL           reduce using rule 70 (exp_comp_2 -> comp_sym exp_ar .)


state 162

    (78) exp_ar -> termino np_operation_quad_ exp_ar_2 .

    LESSTHAN        reduce using rule 78 (exp_ar -> termino np_operation_quad_ exp_ar_2 .)
    GREATERTHAN     reduce using rule 78 (exp_ar -> termino np_operation_quad_ exp_ar_2 .)
    LESSEQUAL       reduce using rule 78 (exp_ar -> termino np_operation_quad_ exp_ar_2 .)
    GREATEREQUAL    reduce using rule 78 (exp_ar -> termino np_operation_quad_ exp_ar_2 .)
    EQUAL           reduce using rule 78 (exp_ar -> termino np_operation_quad_ exp_ar_2 .)
    NOTEQUAL        reduce using rule 78 (exp_ar -> termino np_operation_quad_ exp_ar_2 .)
    AND             reduce using rule 78 (exp_ar -> termino np_operation_quad_ exp_ar_2 .)
    OR              reduce using rule 78 (exp_ar -> termino np_operation_quad_ exp_ar_2 .)
    COMMA           reduce using rule 78 (exp_ar -> termino np_operation_quad_ exp_ar_2 .)
    PARENTHESESR    reduce using rule 78 (exp_ar -> termino np_operation_quad_ exp_ar_2 .)
    DO              reduce using rule 78 (exp_ar -> termino np_operation_quad_ exp_ar_2 .)
    SQUARER         reduce using rule 78 (exp_ar -> termino np_operation_quad_ exp_ar_2 .)
    SEMICOLON       reduce using rule 78 (exp_ar -> termino np_operation_quad_ exp_ar_2 .)
    UNTIL           reduce using rule 78 (exp_ar -> termino np_operation_quad_ exp_ar_2 .)


state 163

    (79) exp_ar_2 -> PLUS . np_push_operator_ exp_ar
    (41) np_push_operator_ -> .

    ID              reduce using rule 41 (np_push_operator_ -> .)
    PARENTHESESL    reduce using rule 41 (np_push_operator_ -> .)
    CTE_INT         reduce using rule 41 (np_push_operator_ -> .)
    CTE_CHAR        reduce using rule 41 (np_push_operator_ -> .)
    CTE_FLOAT       reduce using rule 41 (np_push_operator_ -> .)

    np_push_operator_              shift and go to state 179

state 164

    (80) exp_ar_2 -> MINUS . np_push_operator_ exp_ar
    (41) np_push_operator_ -> .

    ID              reduce using rule 41 (np_push_operator_ -> .)
    PARENTHESESL    reduce using rule 41 (np_push_operator_ -> .)
    CTE_INT         reduce using rule 41 (np_push_operator_ -> .)
    CTE_CHAR        reduce using rule 41 (np_push_operator_ -> .)
    CTE_FLOAT       reduce using rule 41 (np_push_operator_ -> .)

    np_push_operator_              shift and go to state 180

state 165

    (81) exp_ar_2 -> empty .

    LESSTHAN        reduce using rule 81 (exp_ar_2 -> empty .)
    GREATERTHAN     reduce using rule 81 (exp_ar_2 -> empty .)
    LESSEQUAL       reduce using rule 81 (exp_ar_2 -> empty .)
    GREATEREQUAL    reduce using rule 81 (exp_ar_2 -> empty .)
    EQUAL           reduce using rule 81 (exp_ar_2 -> empty .)
    NOTEQUAL        reduce using rule 81 (exp_ar_2 -> empty .)
    AND             reduce using rule 81 (exp_ar_2 -> empty .)
    OR              reduce using rule 81 (exp_ar_2 -> empty .)
    COMMA           reduce using rule 81 (exp_ar_2 -> empty .)
    PARENTHESESR    reduce using rule 81 (exp_ar_2 -> empty .)
    DO              reduce using rule 81 (exp_ar_2 -> empty .)
    SQUARER         reduce using rule 81 (exp_ar_2 -> empty .)
    SEMICOLON       reduce using rule 81 (exp_ar_2 -> empty .)
    UNTIL           reduce using rule 81 (exp_ar_2 -> empty .)


state 166

    (83) termino -> factor np_check_op_stack_factor_ termino_2 .

    PLUS            reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)
    MINUS           reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)
    LESSTHAN        reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)
    GREATERTHAN     reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)
    LESSEQUAL       reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)
    GREATEREQUAL    reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)
    EQUAL           reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)
    NOTEQUAL        reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)
    AND             reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)
    OR              reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)
    COMMA           reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)
    PARENTHESESR    reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)
    DO              reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)
    SQUARER         reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)
    SEMICOLON       reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)
    UNTIL           reduce using rule 83 (termino -> factor np_check_op_stack_factor_ termino_2 .)


state 167

    (84) termino_2 -> MULT . np_push_operator_ termino
    (41) np_push_operator_ -> .

    ID              reduce using rule 41 (np_push_operator_ -> .)
    PARENTHESESL    reduce using rule 41 (np_push_operator_ -> .)
    CTE_INT         reduce using rule 41 (np_push_operator_ -> .)
    CTE_CHAR        reduce using rule 41 (np_push_operator_ -> .)
    CTE_FLOAT       reduce using rule 41 (np_push_operator_ -> .)

    np_push_operator_              shift and go to state 181

state 168

    (85) termino_2 -> DIVIDE . np_push_operator_ termino
    (41) np_push_operator_ -> .

    ID              reduce using rule 41 (np_push_operator_ -> .)
    PARENTHESESL    reduce using rule 41 (np_push_operator_ -> .)
    CTE_INT         reduce using rule 41 (np_push_operator_ -> .)
    CTE_CHAR        reduce using rule 41 (np_push_operator_ -> .)
    CTE_FLOAT       reduce using rule 41 (np_push_operator_ -> .)

    np_push_operator_              shift and go to state 182

state 169

    (86) termino_2 -> empty .

    PLUS            reduce using rule 86 (termino_2 -> empty .)
    MINUS           reduce using rule 86 (termino_2 -> empty .)
    LESSTHAN        reduce using rule 86 (termino_2 -> empty .)
    GREATERTHAN     reduce using rule 86 (termino_2 -> empty .)
    LESSEQUAL       reduce using rule 86 (termino_2 -> empty .)
    GREATEREQUAL    reduce using rule 86 (termino_2 -> empty .)
    EQUAL           reduce using rule 86 (termino_2 -> empty .)
    NOTEQUAL        reduce using rule 86 (termino_2 -> empty .)
    AND             reduce using rule 86 (termino_2 -> empty .)
    OR              reduce using rule 86 (termino_2 -> empty .)
    COMMA           reduce using rule 86 (termino_2 -> empty .)
    PARENTHESESR    reduce using rule 86 (termino_2 -> empty .)
    DO              reduce using rule 86 (termino_2 -> empty .)
    SQUARER         reduce using rule 86 (termino_2 -> empty .)
    SEMICOLON       reduce using rule 86 (termino_2 -> empty .)
    UNTIL           reduce using rule 86 (termino_2 -> empty .)


state 170

    (48) lista_lectura -> ID dimension COMMA . lista_lectura
    (48) lista_lectura -> . ID dimension COMMA lista_lectura
    (49) lista_lectura -> . ID dimension

    ID              shift and go to state 105

    lista_lectura                  shift and go to state 183

state 171

    (53) lista_escritura_rep -> COMMA lista_escritura .

    PARENTHESESR    reduce using rule 53 (lista_escritura_rep -> COMMA lista_escritura .)


state 172

    (55) decision -> IF PARENTHESESL expresion PARENTHESESR THEN . CURLYL estatuto_rep CURLYR decision_alt

    CURLYL          shift and go to state 184


state 173

    (58) rep_c -> WHILE PARENTHESESL expresion PARENTHESESR DO . CURLYL estatuto_rep CURLYR

    CURLYL          shift and go to state 185


state 174

    (59) rep_nc -> FROM asignacion UNTIL expresion DO . CURLYL estatuto_rep CURLYR

    CURLYL          shift and go to state 186


state 175

    (19) funcion -> FUNC tipo_func ID np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON variables . np_add_vars_to_table_ CURLYL estatuto_rep CURLYR
    (22) np_add_vars_to_table_ -> .

    CURLYL          reduce using rule 22 (np_add_vars_to_table_ -> .)

    np_add_vars_to_table_          shift and go to state 187

state 176

    (42) asignacion -> ID np_push_var_ dimension ASSIGN np_push_operator_ expresion . np_assign_quad_
    (39) np_assign_quad_ -> .

    SEMICOLON       reduce using rule 39 (np_assign_quad_ -> .)
    UNTIL           reduce using rule 39 (np_assign_quad_ -> .)

    np_assign_quad_                shift and go to state 188

state 177

    (43) dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ . np_remove_false_bottom_ SQUARER
    (93) np_remove_false_bottom_ -> .

    SQUARER         reduce using rule 93 (np_remove_false_bottom_ -> .)

    np_remove_false_bottom_        shift and go to state 189

state 178

    (90) factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR . np_remove_false_bottom_
    (93) np_remove_false_bottom_ -> .

    MULT            reduce using rule 93 (np_remove_false_bottom_ -> .)
    DIVIDE          reduce using rule 93 (np_remove_false_bottom_ -> .)
    PLUS            reduce using rule 93 (np_remove_false_bottom_ -> .)
    MINUS           reduce using rule 93 (np_remove_false_bottom_ -> .)
    LESSTHAN        reduce using rule 93 (np_remove_false_bottom_ -> .)
    GREATERTHAN     reduce using rule 93 (np_remove_false_bottom_ -> .)
    LESSEQUAL       reduce using rule 93 (np_remove_false_bottom_ -> .)
    GREATEREQUAL    reduce using rule 93 (np_remove_false_bottom_ -> .)
    EQUAL           reduce using rule 93 (np_remove_false_bottom_ -> .)
    NOTEQUAL        reduce using rule 93 (np_remove_false_bottom_ -> .)
    AND             reduce using rule 93 (np_remove_false_bottom_ -> .)
    OR              reduce using rule 93 (np_remove_false_bottom_ -> .)
    COMMA           reduce using rule 93 (np_remove_false_bottom_ -> .)
    PARENTHESESR    reduce using rule 93 (np_remove_false_bottom_ -> .)
    DO              reduce using rule 93 (np_remove_false_bottom_ -> .)
    SQUARER         reduce using rule 93 (np_remove_false_bottom_ -> .)
    SEMICOLON       reduce using rule 93 (np_remove_false_bottom_ -> .)
    UNTIL           reduce using rule 93 (np_remove_false_bottom_ -> .)

    np_remove_false_bottom_        shift and go to state 190

state 179

    (79) exp_ar_2 -> PLUS np_push_operator_ . exp_ar
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    exp_ar                         shift and go to state 191
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 180

    (80) exp_ar_2 -> MINUS np_push_operator_ . exp_ar
    (78) exp_ar -> . termino np_operation_quad_ exp_ar_2
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    exp_ar                         shift and go to state 192
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 181

    (84) termino_2 -> MULT np_push_operator_ . termino
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    termino                        shift and go to state 193
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 182

    (85) termino_2 -> DIVIDE np_push_operator_ . termino
    (83) termino -> . factor np_check_op_stack_factor_ termino_2
    (88) factor -> . const
    (89) factor -> . ID np_push_var_ dimension
    (90) factor -> . PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_
    (91) factor -> . llamada
    (94) const -> . CTE_INT np_push_const_int_
    (95) const -> . CTE_CHAR np_push_const_char_
    (96) const -> . CTE_FLOAT np_push_const_float_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR

    ID              shift and go to state 88
    PARENTHESESL    shift and go to state 89
    CTE_INT         shift and go to state 100
    CTE_CHAR        shift and go to state 101
    CTE_FLOAT       shift and go to state 102

    termino                        shift and go to state 194
    factor                         shift and go to state 97
    const                          shift and go to state 98
    llamada                        shift and go to state 99

state 183

    (48) lista_lectura -> ID dimension COMMA lista_lectura .

    PARENTHESESR    reduce using rule 48 (lista_lectura -> ID dimension COMMA lista_lectura .)


state 184

    (55) decision -> IF PARENTHESESL expresion PARENTHESESR THEN CURLYL . estatuto_rep CURLYR decision_alt
    (29) estatuto_rep -> . estatuto estatuto_rep
    (30) estatuto_rep -> . empty
    (31) estatuto -> . asignacion SEMICOLON
    (32) estatuto -> . llamada SEMICOLON
    (33) estatuto -> . retorno SEMICOLON
    (34) estatuto -> . lectura SEMICOLON
    (35) estatuto -> . escritura SEMICOLON
    (36) estatuto -> . decision
    (37) estatuto -> . rep_c
    (38) estatuto -> . rep_nc
    (101) empty -> .
    (42) asignacion -> . ID np_push_var_ dimension ASSIGN np_push_operator_ expresion np_assign_quad_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR
    (64) retorno -> . RETURN PARENTHESESL expresion PARENTHESESR
    (47) lectura -> . READ PARENTHESESL lista_lectura PARENTHESESR
    (50) escritura -> . PRINT PARENTHESESL lista_escritura PARENTHESESR
    (55) decision -> . IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt
    (58) rep_c -> . WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR
    (59) rep_nc -> . FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR

    CURLYR          reduce using rule 101 (empty -> .)
    ID              shift and go to state 57
    RETURN          shift and go to state 58
    READ            shift and go to state 59
    PRINT           shift and go to state 60
    IF              shift and go to state 61
    WHILE           shift and go to state 62
    FROM            shift and go to state 63

    estatuto_rep                   shift and go to state 195
    estatuto                       shift and go to state 47
    empty                          shift and go to state 48
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    decision                       shift and go to state 54
    rep_c                          shift and go to state 55
    rep_nc                         shift and go to state 56

state 185

    (58) rep_c -> WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL . estatuto_rep CURLYR
    (29) estatuto_rep -> . estatuto estatuto_rep
    (30) estatuto_rep -> . empty
    (31) estatuto -> . asignacion SEMICOLON
    (32) estatuto -> . llamada SEMICOLON
    (33) estatuto -> . retorno SEMICOLON
    (34) estatuto -> . lectura SEMICOLON
    (35) estatuto -> . escritura SEMICOLON
    (36) estatuto -> . decision
    (37) estatuto -> . rep_c
    (38) estatuto -> . rep_nc
    (101) empty -> .
    (42) asignacion -> . ID np_push_var_ dimension ASSIGN np_push_operator_ expresion np_assign_quad_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR
    (64) retorno -> . RETURN PARENTHESESL expresion PARENTHESESR
    (47) lectura -> . READ PARENTHESESL lista_lectura PARENTHESESR
    (50) escritura -> . PRINT PARENTHESESL lista_escritura PARENTHESESR
    (55) decision -> . IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt
    (58) rep_c -> . WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR
    (59) rep_nc -> . FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR

    CURLYR          reduce using rule 101 (empty -> .)
    ID              shift and go to state 57
    RETURN          shift and go to state 58
    READ            shift and go to state 59
    PRINT           shift and go to state 60
    IF              shift and go to state 61
    WHILE           shift and go to state 62
    FROM            shift and go to state 63

    estatuto_rep                   shift and go to state 196
    estatuto                       shift and go to state 47
    empty                          shift and go to state 48
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    decision                       shift and go to state 54
    rep_c                          shift and go to state 55
    rep_nc                         shift and go to state 56

state 186

    (59) rep_nc -> FROM asignacion UNTIL expresion DO CURLYL . estatuto_rep CURLYR
    (29) estatuto_rep -> . estatuto estatuto_rep
    (30) estatuto_rep -> . empty
    (31) estatuto -> . asignacion SEMICOLON
    (32) estatuto -> . llamada SEMICOLON
    (33) estatuto -> . retorno SEMICOLON
    (34) estatuto -> . lectura SEMICOLON
    (35) estatuto -> . escritura SEMICOLON
    (36) estatuto -> . decision
    (37) estatuto -> . rep_c
    (38) estatuto -> . rep_nc
    (101) empty -> .
    (42) asignacion -> . ID np_push_var_ dimension ASSIGN np_push_operator_ expresion np_assign_quad_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR
    (64) retorno -> . RETURN PARENTHESESL expresion PARENTHESESR
    (47) lectura -> . READ PARENTHESESL lista_lectura PARENTHESESR
    (50) escritura -> . PRINT PARENTHESESL lista_escritura PARENTHESESR
    (55) decision -> . IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt
    (58) rep_c -> . WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR
    (59) rep_nc -> . FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR

    CURLYR          reduce using rule 101 (empty -> .)
    ID              shift and go to state 57
    RETURN          shift and go to state 58
    READ            shift and go to state 59
    PRINT           shift and go to state 60
    IF              shift and go to state 61
    WHILE           shift and go to state 62
    FROM            shift and go to state 63

    asignacion                     shift and go to state 49
    estatuto_rep                   shift and go to state 197
    estatuto                       shift and go to state 47
    empty                          shift and go to state 48
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    decision                       shift and go to state 54
    rep_c                          shift and go to state 55
    rep_nc                         shift and go to state 56

state 187

    (19) funcion -> FUNC tipo_func ID np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON variables np_add_vars_to_table_ . CURLYL estatuto_rep CURLYR

    CURLYL          shift and go to state 198


state 188

    (42) asignacion -> ID np_push_var_ dimension ASSIGN np_push_operator_ expresion np_assign_quad_ .

    SEMICOLON       reduce using rule 42 (asignacion -> ID np_push_var_ dimension ASSIGN np_push_operator_ expresion np_assign_quad_ .)
    UNTIL           reduce using rule 42 (asignacion -> ID np_push_var_ dimension ASSIGN np_push_operator_ expresion np_assign_quad_ .)


state 189

    (43) dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ . SQUARER

    SQUARER         shift and go to state 199


state 190

    (90) factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .

    MULT            reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    DIVIDE          reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    PLUS            reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    MINUS           reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    LESSTHAN        reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    GREATERTHAN     reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    LESSEQUAL       reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    GREATEREQUAL    reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    EQUAL           reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    NOTEQUAL        reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    AND             reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    OR              reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    COMMA           reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    PARENTHESESR    reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    DO              reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    SQUARER         reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    SEMICOLON       reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)
    UNTIL           reduce using rule 90 (factor -> PARENTHESESL np_add_false_bottom_ expresion PARENTHESESR np_remove_false_bottom_ .)


state 191

    (79) exp_ar_2 -> PLUS np_push_operator_ exp_ar .

    LESSTHAN        reduce using rule 79 (exp_ar_2 -> PLUS np_push_operator_ exp_ar .)
    GREATERTHAN     reduce using rule 79 (exp_ar_2 -> PLUS np_push_operator_ exp_ar .)
    LESSEQUAL       reduce using rule 79 (exp_ar_2 -> PLUS np_push_operator_ exp_ar .)
    GREATEREQUAL    reduce using rule 79 (exp_ar_2 -> PLUS np_push_operator_ exp_ar .)
    EQUAL           reduce using rule 79 (exp_ar_2 -> PLUS np_push_operator_ exp_ar .)
    NOTEQUAL        reduce using rule 79 (exp_ar_2 -> PLUS np_push_operator_ exp_ar .)
    AND             reduce using rule 79 (exp_ar_2 -> PLUS np_push_operator_ exp_ar .)
    OR              reduce using rule 79 (exp_ar_2 -> PLUS np_push_operator_ exp_ar .)
    COMMA           reduce using rule 79 (exp_ar_2 -> PLUS np_push_operator_ exp_ar .)
    PARENTHESESR    reduce using rule 79 (exp_ar_2 -> PLUS np_push_operator_ exp_ar .)
    DO              reduce using rule 79 (exp_ar_2 -> PLUS np_push_operator_ exp_ar .)
    SQUARER         reduce using rule 79 (exp_ar_2 -> PLUS np_push_operator_ exp_ar .)
    SEMICOLON       reduce using rule 79 (exp_ar_2 -> PLUS np_push_operator_ exp_ar .)
    UNTIL           reduce using rule 79 (exp_ar_2 -> PLUS np_push_operator_ exp_ar .)


state 192

    (80) exp_ar_2 -> MINUS np_push_operator_ exp_ar .

    LESSTHAN        reduce using rule 80 (exp_ar_2 -> MINUS np_push_operator_ exp_ar .)
    GREATERTHAN     reduce using rule 80 (exp_ar_2 -> MINUS np_push_operator_ exp_ar .)
    LESSEQUAL       reduce using rule 80 (exp_ar_2 -> MINUS np_push_operator_ exp_ar .)
    GREATEREQUAL    reduce using rule 80 (exp_ar_2 -> MINUS np_push_operator_ exp_ar .)
    EQUAL           reduce using rule 80 (exp_ar_2 -> MINUS np_push_operator_ exp_ar .)
    NOTEQUAL        reduce using rule 80 (exp_ar_2 -> MINUS np_push_operator_ exp_ar .)
    AND             reduce using rule 80 (exp_ar_2 -> MINUS np_push_operator_ exp_ar .)
    OR              reduce using rule 80 (exp_ar_2 -> MINUS np_push_operator_ exp_ar .)
    COMMA           reduce using rule 80 (exp_ar_2 -> MINUS np_push_operator_ exp_ar .)
    PARENTHESESR    reduce using rule 80 (exp_ar_2 -> MINUS np_push_operator_ exp_ar .)
    DO              reduce using rule 80 (exp_ar_2 -> MINUS np_push_operator_ exp_ar .)
    SQUARER         reduce using rule 80 (exp_ar_2 -> MINUS np_push_operator_ exp_ar .)
    SEMICOLON       reduce using rule 80 (exp_ar_2 -> MINUS np_push_operator_ exp_ar .)
    UNTIL           reduce using rule 80 (exp_ar_2 -> MINUS np_push_operator_ exp_ar .)


state 193

    (84) termino_2 -> MULT np_push_operator_ termino .

    PLUS            reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)
    MINUS           reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)
    LESSTHAN        reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)
    GREATERTHAN     reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)
    LESSEQUAL       reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)
    GREATEREQUAL    reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)
    EQUAL           reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)
    NOTEQUAL        reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)
    AND             reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)
    OR              reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)
    COMMA           reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)
    PARENTHESESR    reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)
    DO              reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)
    SQUARER         reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)
    SEMICOLON       reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)
    UNTIL           reduce using rule 84 (termino_2 -> MULT np_push_operator_ termino .)


state 194

    (85) termino_2 -> DIVIDE np_push_operator_ termino .

    PLUS            reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)
    MINUS           reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)
    LESSTHAN        reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)
    GREATERTHAN     reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)
    LESSEQUAL       reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)
    GREATEREQUAL    reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)
    EQUAL           reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)
    NOTEQUAL        reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)
    AND             reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)
    OR              reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)
    COMMA           reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)
    PARENTHESESR    reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)
    DO              reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)
    SQUARER         reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)
    SEMICOLON       reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)
    UNTIL           reduce using rule 85 (termino_2 -> DIVIDE np_push_operator_ termino .)


state 195

    (55) decision -> IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep . CURLYR decision_alt

    CURLYR          shift and go to state 200


state 196

    (58) rep_c -> WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep . CURLYR

    CURLYR          shift and go to state 201


state 197

    (59) rep_nc -> FROM asignacion UNTIL expresion DO CURLYL estatuto_rep . CURLYR

    CURLYR          shift and go to state 202


state 198

    (19) funcion -> FUNC tipo_func ID np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON variables np_add_vars_to_table_ CURLYL . estatuto_rep CURLYR
    (29) estatuto_rep -> . estatuto estatuto_rep
    (30) estatuto_rep -> . empty
    (31) estatuto -> . asignacion SEMICOLON
    (32) estatuto -> . llamada SEMICOLON
    (33) estatuto -> . retorno SEMICOLON
    (34) estatuto -> . lectura SEMICOLON
    (35) estatuto -> . escritura SEMICOLON
    (36) estatuto -> . decision
    (37) estatuto -> . rep_c
    (38) estatuto -> . rep_nc
    (101) empty -> .
    (42) asignacion -> . ID np_push_var_ dimension ASSIGN np_push_operator_ expresion np_assign_quad_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR
    (64) retorno -> . RETURN PARENTHESESL expresion PARENTHESESR
    (47) lectura -> . READ PARENTHESESL lista_lectura PARENTHESESR
    (50) escritura -> . PRINT PARENTHESESL lista_escritura PARENTHESESR
    (55) decision -> . IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt
    (58) rep_c -> . WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR
    (59) rep_nc -> . FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR

    CURLYR          reduce using rule 101 (empty -> .)
    ID              shift and go to state 57
    RETURN          shift and go to state 58
    READ            shift and go to state 59
    PRINT           shift and go to state 60
    IF              shift and go to state 61
    WHILE           shift and go to state 62
    FROM            shift and go to state 63

    estatuto_rep                   shift and go to state 203
    estatuto                       shift and go to state 47
    empty                          shift and go to state 48
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    decision                       shift and go to state 54
    rep_c                          shift and go to state 55
    rep_nc                         shift and go to state 56

state 199

    (43) dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .

    ASSIGN          reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    COMMA           reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    PARENTHESESR    reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    MULT            reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    DIVIDE          reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    PLUS            reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    MINUS           reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    LESSTHAN        reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    GREATERTHAN     reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    LESSEQUAL       reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    GREATEREQUAL    reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    EQUAL           reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    NOTEQUAL        reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    AND             reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    OR              reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    DO              reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    SQUARER         reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    SEMICOLON       reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)
    UNTIL           reduce using rule 43 (dimension -> SQUAREL np_add_false_bottom_ expresion np_pop_dimension_ np_remove_false_bottom_ SQUARER .)


state 200

    (55) decision -> IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR . decision_alt
    (56) decision_alt -> . ELSE CURLYL estatuto_rep CURLYR
    (57) decision_alt -> . empty
    (101) empty -> .

    ELSE            shift and go to state 205
    ID              reduce using rule 101 (empty -> .)
    RETURN          reduce using rule 101 (empty -> .)
    READ            reduce using rule 101 (empty -> .)
    PRINT           reduce using rule 101 (empty -> .)
    IF              reduce using rule 101 (empty -> .)
    WHILE           reduce using rule 101 (empty -> .)
    FROM            reduce using rule 101 (empty -> .)
    CURLYR          reduce using rule 101 (empty -> .)

    decision_alt                   shift and go to state 204
    empty                          shift and go to state 206

state 201

    (58) rep_c -> WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR .

    ID              reduce using rule 58 (rep_c -> WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR .)
    RETURN          reduce using rule 58 (rep_c -> WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR .)
    READ            reduce using rule 58 (rep_c -> WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR .)
    PRINT           reduce using rule 58 (rep_c -> WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR .)
    IF              reduce using rule 58 (rep_c -> WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR .)
    WHILE           reduce using rule 58 (rep_c -> WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR .)
    FROM            reduce using rule 58 (rep_c -> WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR .)
    CURLYR          reduce using rule 58 (rep_c -> WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR .)


state 202

    (59) rep_nc -> FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR .

    ID              reduce using rule 59 (rep_nc -> FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR .)
    RETURN          reduce using rule 59 (rep_nc -> FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR .)
    READ            reduce using rule 59 (rep_nc -> FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR .)
    PRINT           reduce using rule 59 (rep_nc -> FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR .)
    IF              reduce using rule 59 (rep_nc -> FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR .)
    WHILE           reduce using rule 59 (rep_nc -> FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR .)
    FROM            reduce using rule 59 (rep_nc -> FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR .)
    CURLYR          reduce using rule 59 (rep_nc -> FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR .)


state 203

    (19) funcion -> FUNC tipo_func ID np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON variables np_add_vars_to_table_ CURLYL estatuto_rep . CURLYR

    CURLYR          shift and go to state 207


state 204

    (55) decision -> IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt .

    ID              reduce using rule 55 (decision -> IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt .)
    RETURN          reduce using rule 55 (decision -> IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt .)
    READ            reduce using rule 55 (decision -> IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt .)
    PRINT           reduce using rule 55 (decision -> IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt .)
    IF              reduce using rule 55 (decision -> IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt .)
    WHILE           reduce using rule 55 (decision -> IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt .)
    FROM            reduce using rule 55 (decision -> IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt .)
    CURLYR          reduce using rule 55 (decision -> IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt .)


state 205

    (56) decision_alt -> ELSE . CURLYL estatuto_rep CURLYR

    CURLYL          shift and go to state 208


state 206

    (57) decision_alt -> empty .

    ID              reduce using rule 57 (decision_alt -> empty .)
    RETURN          reduce using rule 57 (decision_alt -> empty .)
    READ            reduce using rule 57 (decision_alt -> empty .)
    PRINT           reduce using rule 57 (decision_alt -> empty .)
    IF              reduce using rule 57 (decision_alt -> empty .)
    WHILE           reduce using rule 57 (decision_alt -> empty .)
    FROM            reduce using rule 57 (decision_alt -> empty .)
    CURLYR          reduce using rule 57 (decision_alt -> empty .)


state 207

    (19) funcion -> FUNC tipo_func ID np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON variables np_add_vars_to_table_ CURLYL estatuto_rep CURLYR .

    FUNC            reduce using rule 19 (funcion -> FUNC tipo_func ID np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON variables np_add_vars_to_table_ CURLYL estatuto_rep CURLYR .)
    PRINCIPAL       reduce using rule 19 (funcion -> FUNC tipo_func ID np_set_scope_ PARENTHESESL funcion_param np_add_func_to_directory_ PARENTHESESR SEMICOLON variables np_add_vars_to_table_ CURLYL estatuto_rep CURLYR .)


state 208

    (56) decision_alt -> ELSE CURLYL . estatuto_rep CURLYR
    (29) estatuto_rep -> . estatuto estatuto_rep
    (30) estatuto_rep -> . empty
    (31) estatuto -> . asignacion SEMICOLON
    (32) estatuto -> . llamada SEMICOLON
    (33) estatuto -> . retorno SEMICOLON
    (34) estatuto -> . lectura SEMICOLON
    (35) estatuto -> . escritura SEMICOLON
    (36) estatuto -> . decision
    (37) estatuto -> . rep_c
    (38) estatuto -> . rep_nc
    (101) empty -> .
    (42) asignacion -> . ID np_push_var_ dimension ASSIGN np_push_operator_ expresion np_assign_quad_
    (46) llamada -> . ID PARENTHESESL expresion_rep PARENTHESESR
    (64) retorno -> . RETURN PARENTHESESL expresion PARENTHESESR
    (47) lectura -> . READ PARENTHESESL lista_lectura PARENTHESESR
    (50) escritura -> . PRINT PARENTHESESL lista_escritura PARENTHESESR
    (55) decision -> . IF PARENTHESESL expresion PARENTHESESR THEN CURLYL estatuto_rep CURLYR decision_alt
    (58) rep_c -> . WHILE PARENTHESESL expresion PARENTHESESR DO CURLYL estatuto_rep CURLYR
    (59) rep_nc -> . FROM asignacion UNTIL expresion DO CURLYL estatuto_rep CURLYR

    CURLYR          reduce using rule 101 (empty -> .)
    ID              shift and go to state 57
    RETURN          shift and go to state 58
    READ            shift and go to state 59
    PRINT           shift and go to state 60
    IF              shift and go to state 61
    WHILE           shift and go to state 62
    FROM            shift and go to state 63

    estatuto_rep                   shift and go to state 209
    estatuto                       shift and go to state 47
    empty                          shift and go to state 48
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    decision                       shift and go to state 54
    rep_c                          shift and go to state 55
    rep_nc                         shift and go to state 56

state 209

    (56) decision_alt -> ELSE CURLYL estatuto_rep . CURLYR

    CURLYR          shift and go to state 210


state 210

    (56) decision_alt -> ELSE CURLYL estatuto_rep CURLYR .

    ID              reduce using rule 56 (decision_alt -> ELSE CURLYL estatuto_rep CURLYR .)
    RETURN          reduce using rule 56 (decision_alt -> ELSE CURLYL estatuto_rep CURLYR .)
    READ            reduce using rule 56 (decision_alt -> ELSE CURLYL estatuto_rep CURLYR .)
    PRINT           reduce using rule 56 (decision_alt -> ELSE CURLYL estatuto_rep CURLYR .)
    IF              reduce using rule 56 (decision_alt -> ELSE CURLYL estatuto_rep CURLYR .)
    WHILE           reduce using rule 56 (decision_alt -> ELSE CURLYL estatuto_rep CURLYR .)
    FROM            reduce using rule 56 (decision_alt -> ELSE CURLYL estatuto_rep CURLYR .)
    CURLYR          reduce using rule 56 (decision_alt -> ELSE CURLYL estatuto_rep CURLYR .)

